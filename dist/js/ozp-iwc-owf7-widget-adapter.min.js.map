{"version":3,"file":"ozp-iwc-owf7-widget-adapter.min.js","sources":["app/js/shindig/util.js","app/js/shindig/json.js","app/js/shindig/rpc.js","app/js/shindig/overrides.js","app/js/adapter/owf7Bridge/modules/components.js","app/js/adapter/owf7Bridge/modules/dd.js","app/js/adapter/owf7Bridge/modules/eventing.js","app/js/adapter/owf7Bridge/modules/intents.js","app/js/adapter/owf7Bridge/modules/kernel.js","app/js/adapter/owf7Bridge/modules/util.js","app/js/adapter/owf7Bridge/owf7Bridge.js","app/js/adapter/owf7Participant/modules/components.js","app/js/adapter/owf7Participant/modules/dd.js","app/js/adapter/owf7Participant/modules/eventing.js","app/js/adapter/owf7Participant/modules/intents.js","app/js/adapter/owf7Participant/modules/kernel.js","app/js/adapter/owf7Participant/modules/util.js","app/js/adapter/owf7Participant/owf7Participant.js","app/js/adapter/owf7ParticipantListener.js"],"names":["gadgets","util","parseUrlParams","query","l","document","location","href","queryIdx","indexOf","hashIdx","substr","join","split","unescapeEntity","match","value","String","fromCharCode","init","config","features","parameters","onLoadHandlers","escapeCodePoints",10,13,34,39,60,62,92,8232,8233,"register","getUrlParameters","pairs","unesc","window","decodeURIComponent","unescape","i","j","length","pos","argName","substring","replace","makeClosure","scope","callback","var_args","baseArgs","arguments","push","tmpArgs","slice","apply","makeEnum","values","v","obj","getFeatureParameters","feature","hasFeature","registerOnLoadHandler","runOnLoadHandlers","escape","input","opt_escapeObjects","escapeString","newObject","field","hasOwnProperty","str","ch","shouldEscape","out","charCodeAt","charAt","unescapeString","json","f","n","Date","prototype","toJSON","this","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","stringify","JSON","parse","text","test","eval","rpc","getRelayChannel","postMessage","ActiveXObject","navigator","product","setupChannel","relayChannel","onmessage","packet","msg","data","e","process","opener","parent","addEventListener","removeEventListener","attachEvent","NIX_GET_WRAPPER","NIX_HANDLE_MESSAGE","NIX_CREATE_CHANNEL","name","channel","token","authToken","nix_channels","vbscript","NIX_WRAPPER","execScript","getId","windowName","id","setupFrame","frameId","setup","frame","getElementById","FE_G2C_CHANNEL","args","wrapper","contentWindow","encodeLegacyData","argsEscaped","encodeURIComponent","s","a","Array","t","Error","c","result","call","CALLBACK_NAME","services","DEFAULT_NAME","callNix","targetId","serviceName","from","rpcData","handler","GetAuthToken","CreateChannel","SendMessage","callIfpc","callFrameElement","callArgs","fe","frameElement","FE_C2G_CHANNEL","relay","getRelayUrl","src","queueOut","useLegacyProtocol","callId","concat","useMultiPartMessages","part","message","payloadLength","URL_LIMIT","numPackets","Math","ceil","packetIdx","emitInvisibleIframe","shift","isInPopup","_childWindows","isMessageComplete","arr","total","_childWindowMessageId","_childWindowMessageQueue","target","iframe","iframePool","ifr","recyclable","readyState","parentNode","removeChild","splice","createElement","style","border","width","height","visibility","position","onload","setTimeout","body","appendChild","getTargetWin","sameDomain","ii","childWindow","callSameDomain","fn","targetEl","receiveSameDomain","parentRelayUrl","relayUrl","param","params","search","parentParam","callbacks","rpctoken","ifpctok","messagesIn","callbackId","_getChildWindowMessage","msgId","q","m","requiredConfig","NonEmptyStringValidator","unregister","registerDefault","unregisterDefault","channelType","targetWin","targetDoc","setRelayUrl","url","opt_useLegacy","useMultiPartMessagesForIFPC","setAuthToken","receive","fragment","parseInt","payload","completed","ozpIwc","owf7BridgeModules","components","listener","keys","_widget_iframe_ready","participant","widget","_WIDGET_LAUNCHER_CHANNEL","sender","onLaunchWidget","dd","_fake_mouse_move","log","info","onFakeMouseMoveFromClient","_fake_mouse_up","onFakeMouseUpFromClient","_fake_mouse_out","eventing","container_init","onContainerInit","pubsub","command","dest","onPubsub","intents","_intents","senderId","intent","destIds","onIntents","_intents_receive","destWidgetId","onIntentsReceive","kernel","_getWidgetReady","widgetId","srcWidgetId","onGetWidgetReady","_widgetReady","onWidgetReady","register_functions","iframeId","functions","onRegisterFunctions","GET_FUNCTIONS","widgetID","sourceWidgetId","onGetFunctions","FUNCTION_CALL","widgetIdCaller","functionName","onFunctionCall","FUNCTION_CALL_RESULT","onFunctionCallResult","LIST_WIDGETS","onListWidgets","DIRECT_MESSAGE","dataToSend","onDirectMessage","ADD_EVENT","eventName","onAddEvent","CALL_EVENT","onCallEvent","Ozone.log","onOzoneLog","Owf7Bridge","_noListener_err","funcs","_defaultHandler","defaultHandler","_initHandlers","addHandlers","object","formattedObj","objectCategoryFormat","_registerFunctions","removeHandlers","_unregisterFunctions","updateHandlers","oldObject","registerDefaultHandler","self","onFunction","outObj","func","getParticipant","unshift","functionsInObjects","inObj","onFn","rpcString","error","module","uncategorized","recurseIfObject","onObj","console","owf7ParticipantModules","Components","systemApi","client","system","launch","guid","contentType","entity","then","reply","newWidgetLaunched","uniqueId","Dd","mouseOver","lastPosition","lastMouseMove","now","mouseMoveDelay","dataApi","registerDragAndDrop","rpcChannel","watch","onFakeMouseUpFromOthers","newValue","onFakeMouseMoveFromOthers","localizedEvent","convertToLocalCoordinates","inIframeBounds","rpcId","deltaT","set","lifespan","pageX","clientWidth","pageY","clientHeight","rv","element","offsetLeft","scrollLeft","clientLeft","offsetTop","scrollTop","clientTop","offsetParent","hookPublish_dragOutName","hookPublish_dropReceiveData","hookReceive_dragSendData","hookReceive_dragOutName","hookReceive_dropReceiveData","hookReceive_dragStart","inDrag","hookPublish_dragStart","hookReceive_dragStopInContainer","hookReceive_dragStopInWidget","hookPublish_dragSendData","hookPublish_dragStopInWidget","get","Eventing","pubsubChannel","subscriptions","random","initMessage","idString","jsonString","onPublish","onSubscribe","onUnsubscribe","done","replyTo","Intents","intentsApi","dataType","action","invoke","type","icon","appData","icons","small","label","widgetParams","title","response","ifie","intentObj","Kernel","widgetReadyMap","proxyMap","registerWidgetListing","registerFunctionCallListener","registerFunctionCallResultListener","registerWidgetReadyListener","registerDirectMessageListener","listWidgetChannel","widgetProxyChannelPrefix","widgetReadyResource","functionCallResource","functionCallResultResource","directMessageResource","callEventResource","instanceId","unregisterWidgetListing","addChild","widgetListing","resource","ready","proxyHolders","len","proxyHolder","isArray","functionArray","var_arg","time","functionCallClient","functionCallResultClient","list","widgets","widgetCount","handleWidgetData","resp","ts","directMessageClient","eventClient","Util","registerLogging","debug","Owf7Participant","widgetGuid","onReady","widgetQuery","launchData","_initModules","externalInit","connect","connectPromise","openWidget","setWidgetTitle","setAttribute","ddCalibrate","pointerEvents","Promise","resolve","reject","webContextPath","preferenceLocation","prefsUrl","rpcRelay","layout","containerVersion","owf","lang","runningInOZP","currentTheme","themeName","themeContrast","themeFontSize","version","locked","_getApplicationData","fallbackData","large","banner","featuredBanner","eror","host","pathname","absolutePath","link","protocol","hash","Owf7ParticipantListener","owf7PrefsUrl","participants","ClientParticipant","bridge","installDragAndDrop","xOffset","screenX","outerWidth","innerWidth","yOffset","screenY","outerHeight","innerHeight","makeGuid","S4","toString","updateMouseCoordinates","clientX","clientY","k","addWidget","cfg","hashObj","newHash","widgetRegistrations","state","participantConfig","cancelDrag","updateMouse","evt","button","formattedId"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACtjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;AChnzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACjndA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;ACvrsourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nvar gadgets = gadgets || {};\n\n/**\n * @fileoverview General purpose utilities that gadgets can use.\n */\n\n/**\n * @static\n * @class Provides general-purpose utility functions.\n * @name gadgets.util\n */\n\ngadgets.util = function() {\n  /**\n   * Parses URL parameters into an object.\n   * @return {Array.&lt;String&gt;} The parameters\n   */\n  function parseUrlParams() {\n    // Get settings from url, 'hash' takes precedence over 'search' component\n    // don't use document.location.hash due to browser differences.\n    var query;\n    var l = document.location.href;\n    var queryIdx = l.indexOf(\"?\");\n    var hashIdx = l.indexOf(\"#\");\n    if (hashIdx === -1) {\n      query = l.substr(queryIdx + 1);\n    } else {\n      // essentially replaces \"#\" with \"&\"\n      query = [l.substr(queryIdx + 1, hashIdx - queryIdx - 1), \"&\",\n               l.substr(hashIdx + 1)].join(\"\");\n    }\n    return query.split(\"&\");\n  }\n\n  var parameters = null;\n  var features = {};\n  var onLoadHandlers = [];\n\n  // Maps code points to the value to replace them with.\n  // If the value is \"false\", the character is removed entirely, otherwise\n  // it will be replaced with an html entity.\n  var escapeCodePoints = {\n   // nul; most browsers truncate because they use c strings under the covers.\n   0 : false,\n   // new line\n   10 : true,\n   // carriage return\n   13 : true,\n   // double quote\n   34 : true,\n   // single quote\n   39 : true,\n   // less than\n   60 : true,\n   // greater than\n   62 : true,\n   // Backslash\n   92 : true,\n   // line separator\n   8232 : true,\n   // paragraph separator\n   8233 : true\n  };\n\n  /**\n   * Regular expression callback that returns strings from unicode code points.\n   *\n   * @param {Array} match Ignored\n   * @param {String} value The codepoint value to convert\n   * @return {String} The character corresponding to value.\n   */\n  function unescapeEntity(match, value) {\n    return String.fromCharCode(value);\n  }\n\n  /**\n   * Initializes feature parameters.\n   */\n  function init(config) {\n    features = config[\"core.util\"] || {};\n  }\n  if (gadgets.config) {\n    gadgets.config.register(\"core.util\", null, init);\n  }\n\n  return /** @scope gadgets.util */ {\n\n    /**\n     * Gets the URL parameters.\n     *\n     * @return {Object} Parameters passed into the query string\n     * @member gadgets.util\n     * @private Implementation detail.\n     */\n    getUrlParameters : function () {\n      if (parameters !== null) {\n        return parameters;\n      }\n      parameters = {};\n      var pairs = parseUrlParams();\n      var unesc = window.decodeURIComponent ? decodeURIComponent : unescape;\n      for (var i = 0, j = pairs.length; i < j; ++i) {\n        var pos = pairs[i].indexOf('=');\n        if (pos === -1) {\n          continue;\n        }\n        var argName = pairs[i].substring(0, pos);\n        var value = pairs[i].substring(pos + 1);\n        // difference to IG_Prefs, is that args doesn't replace spaces in\n        // argname. Unclear on if it should do:\n        // argname = argname.replace(/\\+/g, \" \");\n        value = value.replace(/\\+/g, \" \");\n        parameters[argName] = unesc(value);\n      }\n      return parameters;\n    },\n\n    /**\n     * Creates a closure that is suitable for passing as a callback.\n     * Any number of arguments\n     * may be passed to the callback;\n     * they will be received in the order they are passed in.\n     *\n     * @param {Object} scope The execution scope; may be null if there is no\n     *     need to associate a specific instance of an object with this\n     *     callback\n     * @param {Function} callback The callback to invoke when this is run;\n     *     any arguments passed in will be passed after your initial arguments\n     * @param {Object} var_args Initial arguments to be passed to the callback\n     *\n     * @member gadgets.util\n     * @private Implementation detail.\n     */\n    makeClosure : function (scope, callback, var_args) {\n      // arguments isn't a real array, so we copy it into one.\n      var baseArgs = [];\n      for (var i = 2, j = arguments.length; i < j; ++i) {\n       baseArgs.push(arguments[i]);\n      }\n      return function() {\n        // append new arguments.\n        var tmpArgs = baseArgs.slice();\n        for (var i = 0, j = arguments.length; i < j; ++i) {\n          tmpArgs.push(arguments[i]);\n        }\n        return callback.apply(scope, tmpArgs);\n      };\n    },\n\n    /**\n     * Utility function for generating an \"enum\" from an array.\n     *\n     * @param {Array.<String>} values The values to generate.\n     * @return {Map&lt;String,String&gt;} An object with member fields to handle\n     *   the enum.\n     *\n     * @private Implementation detail.\n     */\n    makeEnum : function (values) {\n      var obj = {};\n      for (var i = 0, v; v = values[i]; ++i) {\n        obj[v] = v;\n      }\n      return obj;\n    },\n\n    /**\n     * Gets the feature parameters.\n     *\n     * @param {String} feature The feature to get parameters for\n     * @return {Object} The parameters for the given feature, or null\n     *\n     * @member gadgets.util\n     */\n    getFeatureParameters : function (feature) {\n      return typeof features[feature] === \"undefined\"\n          ? null : features[feature];\n    },\n\n    /**\n     * Returns whether the current feature is supported.\n     *\n     * @param {String} feature The feature to test for\n     * @return {Boolean} True if the feature is supported\n     *\n     * @member gadgets.util\n     */\n    hasFeature : function (feature) {\n      return typeof features[feature] !== \"undefined\";\n    },\n\n    /**\n     * Registers an onload handler.\n     * @param {Function} callback The handler to run\n     *\n     * @member gadgets.util\n     */\n    registerOnLoadHandler : function (callback) {\n      onLoadHandlers.push(callback);\n    },\n\n    /**\n     * Runs all functions registered via registerOnLoadHandler.\n     * @private Only to be used by the container, not gadgets.\n     */\n    runOnLoadHandlers : function () {\n      for (var i = 0, j = onLoadHandlers.length; i < j; ++i) {\n        onLoadHandlers[i]();\n      }\n    },\n\n    /**\n     * Escapes the input using html entities to make it safer.\n     *\n     * If the input is a string, uses gadgets.util.escapeString.\n     * If it is an array, calls escape on each of the array elements\n     * if it is an object, will only escape all the mapped keys and values if\n     * the opt_escapeObjects flag is set. This operation involves creating an\n     * entirely new object so only set the flag when the input is a simple\n     * string to string map.\n     * Otherwise, does not attempt to modify the input.\n     *\n     * @param {Object} input The object to escape\n     * @param {Boolean} opt_escapeObjects Whether to escape objects.\n     * @return {Object} The escaped object\n     * @private Only to be used by the container, not gadgets.\n     */\n    escape : function(input, opt_escapeObjects) {\n      if (!input) {\n        return input;\n      } else if (typeof input === \"string\") {\n        return gadgets.util.escapeString(input);\n      } else if (typeof input === \"array\") {\n        for (var i = 0, j = input.length; i < j; ++i) {\n          input[i] = gadgets.util.escape(input[i]);\n        }\n      } else if (typeof input === \"object\" && opt_escapeObjects) {\n        var newObject = {};\n        for (var field in input) if (input.hasOwnProperty(field)) {\n          newObject[gadgets.util.escapeString(field)]\n              = gadgets.util.escape(input[field], true);\n        }\n        return newObject;\n      }\n      return input;\n    },\n\n    /**\n     * Escapes the input using html entities to make it safer.\n     *\n     * Currently not in the spec -- future proposals may change\n     * how this is handled.\n     *\n     * TODO: Parsing the string would probably be more accurate and faster than\n     * a bunch of regular expressions.\n     *\n     * @param {String} str The string to escape\n     * @return {String} The escaped string\n     */\n    escapeString : function(str) {\n      var out = [], ch, shouldEscape;\n      for (var i = 0, j = str.length; i < j; ++i) {\n        ch = str.charCodeAt(i);\n        shouldEscape = escapeCodePoints[ch];\n        if (shouldEscape === true) {\n          out.push(\"&#\", ch, \";\");\n        } else if (shouldEscape !== false) {\n          // undefined or null are OK.\n          out.push(str.charAt(i));\n        }\n      }\n      return out.join(\"\");\n    },\n\n    /**\n     * Reverses escapeString\n     *\n     * @param {String} str The string to unescape.\n     */\n    unescapeString : function(str) {\n      return str.replace(/&#([0-9]+);/g, unescapeEntity);\n    }\n  };\n}();\n// Initialize url parameters so that hash data is pulled in before it can be\n// altered by a click.\ngadgets.util.getUrlParameters();\n\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * @fileoverview\n * The global object gadgets.json contains two methods.\n *\n * gadgets.json.stringify(value) takes a JavaScript value and produces a JSON\n * text. The value must not be cyclical.\n *\n * gadgets.json.parse(text) takes a JSON text and produces a JavaScript value.\n * It will return false if there is an error.\n*/\n\nvar gadgets = gadgets || {};\n\n/**\n * @static\n * @class Provides operations for translating objects to and from JSON.\n * @name gadgets.json\n */\n\n/**\n * Port of the public domain JSON library by Douglas Crockford.\n * See: http://www.json.org/json2.js\n */\ngadgets.json = function () {\n\n  /**\n   * Formats integers to 2 digits.\n   * @param {Number} n\n   */\n  function f(n) {\n    return n < 10 ? '0' + n : n;\n  }\n\n  Date.prototype.toJSON = function () {\n    return [this.getUTCFullYear(), '-',\n           f(this.getUTCMonth() + 1), '-',\n           f(this.getUTCDate()), 'T',\n           f(this.getUTCHours()), ':',\n           f(this.getUTCMinutes()), ':',\n           f(this.getUTCSeconds()), 'Z'].join(\"\");\n  };\n\n  return {\n    stringify: function(value) {\n        return JSON.stringify(value);\n    },\n    parse: function (text) {\n// Parsing happens in three stages. In the first stage, we run the text against\n// regular expressions that look for non-JSON patterns. We are especially\n// concerned with '()' and 'new' because they can cause invocation, and '='\n// because it can cause mutation. But just to be safe, we want to reject all\n// unexpected forms.\n\n// We split the first stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace all backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n      if (typeof(text)===\"string\" && /^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/b-u]/g, '@').\n          replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n          replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n        return eval('(' + text + ')');\n      }\n      // If the text is not JSON parseable, then return false.\n\n      return false;\n    }\n  };\n}();\n\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n */\n\n/**\n * @fileoverview Remote procedure call library for gadget-to-container,\n * container-to-gadget, and gadget-to-gadget (thru container) communication.\n */\n\nvar gadgets = gadgets || {};\n\n/**\n * @static\n * @class Provides operations for making rpc calls.\n * @name gadgets.rpc\n */\ngadgets.rpc = function() {\n  //alert(\"Initing gadgets.rpc\");\n  // General constants.\n  var CALLBACK_NAME = '__cb';\n  var DEFAULT_NAME = '';\n\n  // Consts for FrameElement.\n  var FE_G2C_CHANNEL = '__g2c_rpc';\n  var FE_C2G_CHANNEL = '__c2g_rpc';\n\n  // Consts for NIX. VBScript doesn't\n  // allow items to start with _ for some reason,\n  // so we need to make these names quite unique, as\n  // they will go into the global namespace.\n  var NIX_WRAPPER = 'GRPC____NIXVBS_wrapper';\n  var NIX_GET_WRAPPER = 'GRPC____NIXVBS_get_wrapper';\n  var NIX_HANDLE_MESSAGE = 'GRPC____NIXVBS_handle_message';\n  var NIX_CREATE_CHANNEL = 'GRPC____NIXVBS_create_channel';\n\n  // JavaScript reference to the NIX VBScript wrappers.\n  // Gadgets will have but a single channel under\n  // nix_channels['..'] while containers will have a channel\n  // per gadget stored under the gadget's ID.\n  var nix_channels = {};\n\n  var services = {};\n  var iframePool = [];\n  var relayUrl = {};\n  var useLegacyProtocol = {};\n  var authToken = {};\n  var callId = 0;\n  var callbacks = {};\n  var setup = {};\n  var sameDomain = {};\n  var params = {};\n\n  // Load the authentication token for speaking to the container\n  // from the gadget's parameters, or default to '0' if not found.\n  if (gadgets.util) {\n    params = gadgets.util.getUrlParameters();\n\t//alert(\"gadget params: \" + params);\n  }\n\n  authToken['..'] = params.rpctoken || params.ifpctok || 0;\n\n  //ifpc mods\n  var URL_LIMIT = 2000;\n  var messagesIn = {};\n  var useMultiPartMessages = {};\n  //ifpc mods\n\n\n  /*\n   * Return a short code representing the best available cross-domain\n   * message transport available to the browser.\n   *\n   * + For those browsers that support native messaging (various implementations\n   *   of the HTML5 postMessage method), use that. Officially defined at\n   *   http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html.\n   *\n   *   postMessage is a native implementation of XDC. A page registers that\n   *   it would like to receive messages by listening the the \"message\" event\n   *   on the window (document in DPM) object. In turn, another page can\n   *   raise that event by calling window.postMessage (document.postMessage\n   *   in DPM) with a string representing the message and a string\n   *   indicating on which domain the receiving page must be to receive\n   *   the message. The target page will then have its \"message\" event raised\n   *   if the domain matches and can, in turn, check the origin of the message\n   *   and process the data contained within.\n   *\n   *     wpm: postMessage on the window object.\n   *        - Internet Explorer 8+\n   *        - Safari (latest nightlies as of 26/6/2008)\n   *        - Firefox 3+\n   *        - Opera 9+\n   *\n   *     dpm: postMessage on the document object.\n   *        - Opera 8+\n   *\n   * + For Internet Explorer before version 8, the security model allows anyone\n   *   parent to set the value of the \"opener\" property on another window,\n   *   with only the receiving window able to read it.\n   *   This method is dubbed \"Native IE XDC\" (NIX).\n   *\n   *   This method works by placing a handler object in the \"opener\" property\n   *   of a gadget when the container sets up the authentication information\n   *   for that gadget (by calling setAuthToken(...)). At that point, a NIX\n   *   wrapper is created and placed into the gadget by calling\n   *   theframe.contentWindow.opener = wrapper. Note that as a result, NIX can\n   *   only be used by a container to call a particular gadget *after* that\n   *   gadget has called the container at least once via NIX.\n   *\n   *   The NIX wrappers in this RPC implementation are instances of a VBScript\n   *   class that is created when this implementation loads. The reason for\n   *   using a VBScript class stems from the fact that any object can be passed\n   *   into the opener property.\n   *   While this is a good thing, as it lets us pass functions and setup a true\n   *   bidirectional channel via callbacks, it opens a potential security hole\n   *   by which the other page can get ahold of the \"window\" or \"document\"\n   *   objects in the parent page and in turn wreak havok. This is due to the\n   *   fact that any JS object useful for establishing such a bidirectional\n   *   channel (such as a function) can be used to access a function\n   *   (eg. obj.toString, or a function itself) created in a specific context,\n   *   in particular the global context of the sender. Suppose container\n   *   domain C passes object obj to gadget on domain G. Then the gadget can\n   *   access C's global context using:\n   *   var parentWindow = (new obj.toString.constructor(\"return window;\"))();\n   *   Nulling out all of obj's properties doesn't fix this, since IE helpfully\n   *   restores them to their original values if you do something like:\n   *   delete obj.toString; delete obj.toString;\n   *   Thus, we wrap the necessary functions and information inside a VBScript\n   *   object. VBScript objects in IE, like DOM objects, are in fact COM\n   *   wrappers when used in JavaScript, so we can safely pass them around\n   *   without worrying about a breach of context while at the same time\n   *   allowing them to act as a pass-through mechanism for information\n   *   and function calls. The implementation details of this VBScript wrapper\n   *   can be found in the setupChannel() method below.\n   *\n   *     nix: Internet Explorer-specific window.opener trick.\n   *       - Internet Explorer 6\n   *       - Internet Explorer 7\n   *\n   * + For Gecko-based browsers, the security model allows a child to call a\n   *   function on the frameElement of the iframe, even if the child is in\n   *   a different domain. This method is dubbed \"frameElement\" (fe).\n   *\n   *   The ability to add and call such functions on the frameElement allows\n   *   a bidirectional channel to be setup via the adding of simple function\n   *   references on the frameElement object itself. In this implementation,\n   *   when the container sets up the authentication information for that gadget\n   *   (by calling setAuth(...)) it as well adds a special function on the\n   *   gadget's iframe. This function can then be used by the gadget to send\n   *   messages to the container. In turn, when the gadget tries to send a\n   *   message, it checks to see if this function has its own function stored\n   *   that can be used by the container to call the gadget. If not, the\n   *   function is created and subsequently used by the container.\n   *   Note that as a result, FE can only be used by a container to call a\n   *   particular gadget *after* that gadget has called the container at\n   *   least once via FE.\n   *\n   *     fe: Gecko-specific frameElement trick.\n   *        - Firefox 1+\n   *\n   * + For all others, we have a fallback mechanism known as \"ifpc\". IFPC\n   *   exploits the fact that while same-origin policy prohibits a frame from\n   *   accessing members on a window not in the same domain, that frame can,\n   *   however, navigate the window heirarchy (via parent). This is exploited by\n   *   having a page on domain A that wants to talk to domain B create an iframe\n   *   on domain B pointing to a special relay file and with a message encoded\n   *   after the hash (#). This relay, in turn, finds the page on domain B, and\n   *   can call a receipt function with the message given to it. The relay URL\n   *   used by each caller is set via the gadgets.rpc.setRelayUrl(..) and\n   *   *must* be called before the call method is used.\n   *\n   *     ifpc: Iframe-based method, utilizing a relay page, to send a message.\n   */\n  function getRelayChannel() {\n//    return 'ifpc';\n    return typeof window.postMessage === 'function' ? 'wpm' :\n           typeof window.postMessage === 'object' ? 'wpm':\n           typeof document.postMessage === 'function' ? 'dpm' :\n           window.ActiveXObject ? 'nix' :\n           navigator.product === 'Gecko' ? 'fe' :\n           'ifpc';\n  }\n\n  /**\n   * Conducts any initial global work necessary to setup the\n   * channel type chosen.\n   */\n  function setupChannel() {\n    // If the channel type is one of the native\n    // postMessage based ones, setup the handler to receive\n    // messages.\n    if (relayChannel === 'dpm' || relayChannel === 'wpm') {\n      var onmessage = function (packet) {\n        // TODO validate packet.domain for security reasons\n        var msg=null;\n        try{\n            msg=gadgets.json.parse(packet.data);\n        } catch(e) {\n            // assume it was message from some other system and fall through\n        }\n        if(msg) {\n            process(msg);\n        }\n      };\n\n      // the widget's rpc will try and run up the chain to the widget opener if same domain.\n      // we must do the same to capture the message if the opener was non legacy. If cross domain this rpc will catch\n      // the message.\n      if(window.opener){\n        if(window.opener.parent) {\n          // hijack messages from the opener\n          window.opener.parent.addEventListener('message', onmessage, false);\n          // remove listener gracefully on close of widget\n          window.addEventListener('beforeunload', function () {\n            window.opener.parent.removeEventListener('message', onmessage);\n          });\n        }\n        window.opener.addEventListener('message',onmessage, false);\n      }\n      if (typeof window.addEventListener != 'undefined') {\n        window.addEventListener('message', onmessage, false);\n      } else if (typeof window.attachEvent != 'undefined') {\n        window.attachEvent('onmessage', onmessage);\n      }\n\n    }\n\n    // If the channel type is NIX, we need to ensure the\n    // VBScript wrapper code is in the page and that the\n    // global Javascript handlers have been set.\n    if (relayChannel === 'nix') {\n\n       //alert('nix setup!');\n\n      // VBScript methods return a type of 'unknown' when\n      // checked via the typeof operator in IE. Fortunately\n      // for us, this only applies to COM objects, so we\n      // won't see this for a real Javascript object.\n      if (typeof window[NIX_GET_WRAPPER] !== 'unknown') {\n        window[NIX_HANDLE_MESSAGE] = function(data) {\n          process(gadgets.json.parse(data));\n        };\n\n        window[NIX_CREATE_CHANNEL] = function(name, channel, token) {\n          // Verify the authentication token of the gadget trying\n          // to create a channel for us.\n          if (authToken[name] == token) {\n            nix_channels[name] = channel;\n          }\n        };\n\n        // Inject the VBScript code needed.\n        var vbscript =\n          // We create a class to act as a wrapper for\n          // a Javascript call, to prevent a break in of\n          // the context.\n          'Class ' + NIX_WRAPPER + '\\n '\n\n          // An internal member for keeping track of the\n          // name of the document (container or gadget)\n          // for which this wrapper is intended. For\n          // those wrappers created by gadgets, this is not\n          // used (although it is set to \"..\")\n          + 'Private m_Intended\\n'\n\n          // Stores the auth token used to communicate with\n          // the gadget. The GetChannelCreator method returns\n          // an object that returns this auth token. Upon matching\n          // that with its own, the gadget uses the object\n          // to actually establish the communication channel.\n          + 'Private m_Auth\\n'\n\n          // Method for internally setting the value\n          // of the m_Intended property.\n          + 'Public Sub SetIntendedName(name)\\n '\n          + 'If isEmpty(m_Intended) Then\\n'\n          + 'm_Intended = name\\n'\n          + 'End If\\n'\n          + 'End Sub\\n'\n\n          // Method for internally setting the value of the m_Auth property.\n          + 'Public Sub SetAuth(auth)\\n '\n          + 'If isEmpty(m_Auth) Then\\n'\n          + 'm_Auth = auth\\n'\n          + 'End If\\n'\n          + 'End Sub\\n'\n\n          // A wrapper method which actually causes a\n          // message to be sent to the other context.\n          + 'Public Sub SendMessage(data)\\n '\n          + NIX_HANDLE_MESSAGE + '(data)\\n'\n          + 'End Sub\\n'\n\n          // Returns the auth token to the gadget, so it can\n          // confirm a match before initiating the connection\n          + 'Public Function GetAuthToken()\\n '\n          + 'GetAuthToken = m_Auth\\n'\n          + 'End Function\\n'\n\n          // Method for setting up the container->gadget\n          // channel. Not strictly needed in the gadget's\n          // wrapper, but no reason to get rid of it. Note here\n          // that we pass the intended name to the NIX_CREATE_CHANNEL\n          // method so that it can save the channel in the proper place\n          // *and* verify the channel via the authentication token passed\n          // here.\n          + 'Public Sub CreateChannel(channel, auth)\\n '\n          + 'Call ' + NIX_CREATE_CHANNEL + '(m_Intended, channel, auth)\\n'\n          + 'End Sub\\n'\n          + 'End Class\\n'\n\n          // Function to get a reference to the wrapper.\n          + 'Function ' + NIX_GET_WRAPPER + '(name, auth)\\n'\n          + 'Dim wrap\\n'\n          + 'Set wrap = New ' + NIX_WRAPPER + '\\n'\n          + 'wrap.SetIntendedName name\\n'\n          + 'wrap.SetAuth auth\\n'\n          + 'Set ' + NIX_GET_WRAPPER + ' = wrap\\n'\n          + 'End Function';\n\n        try {\n          //alert('execScript! '+vbscript);\n          window.execScript(vbscript, 'vbscript');\n        } catch (e) {\n\n          //alert('exception! back to ifpc');\n          // Fall through to IFPC.\n          relayChannel = 'ifpc';\n        }\n      }\n    }\n  }\n\n  //Store the parsed window.name configuration, if necessary\n  var config = null;\n\n  //Parse the window.name configuration and cache it.  Handle the case\n  //where containers use a JSON string in the window name and a plain string,\n//  function getConfig() {\n//    if (config == null) {\n//        config = {};\n//        if (window.name.charAt(0) != '{') {\n//            config.rpcId = window.name;\n//            config.kernel = true;\n//        } else {\n//            config = gadgets.json.parse(window.name);\n//            config.rpcId = config.id;\n//            return config;\n//        }\n//    } else {\n//        return config;\n//    }\n//  }\n\n  //Get the IFrame ID from the window.name property.  Handle three cases\n  //1. OWF Webtop, which assumes IFrame IDs are identical to window names\n  //2. OWF Kernel, which assumes that IFrame IDs are contianed in the window name as JSON as the id field\n  //3. Others, which use a plain string in the window name and assume the IFrame id is also this plain string\n//  function getId(windowName) {\n//    var conf = getConfig();\n//    if (conf.kernel)\n//        return conf.rpcId;\n//    else\n//        return windowName;\n//  }\n\n  function getId(windowName) {\n    if (windowName.charAt(0) != '{') {\n      return windowName\n    }\n    else {\n      var obj = gadgets.json.parse(windowName);\n      var id = obj.id;\n      return gadgets.json.stringify({id:obj.id});\n    }\n  }\n\n  // Pick the most efficient RPC relay mechanism\n  var relayChannel = getRelayChannel();\n  //alert('relaychannel is '+relayChannel);\n\n  // Conduct any setup necessary for the chosen channel.\n  setupChannel();\n\n  // Create the Default RPC handler.\n  services[DEFAULT_NAME] = function() {\n    //suppress this error - no one should ever try to use a service that wasn't registered using our api\n    //throw new Error('Unknown RPC service: ' + this.s);\n  };\n\n  // Create a Special RPC handler for callbacks.\n  services[CALLBACK_NAME] = function(callbackId, result) {\n    var callback = callbacks[callbackId];\n    if (callback) {\n      delete callbacks[callbackId];\n      callback(result);\n    }\n  };\n\n  /**\n   * Conducts any frame-specific work necessary to setup\n   * the channel type chosen. This method is called when\n   * the container page first registers the gadget in the\n   * RPC mechanism. Gadgets, in turn, will complete the setup\n   * of the channel once they send their first messages.\n   */\n  function setupFrame(frameId, token) {\n    if (setup[frameId]) {\n      return;\n    }\n\n    if (relayChannel === 'fe') {\n      try {\n        var frame = document.getElementById(frameId);\n        frame[FE_G2C_CHANNEL] = function(args) {\n          process(gadgets.json.parse(args));\n        };\n      } catch (e) {\n        // Something went wrong. System will fallback to\n        // IFPC.\n      }\n    }\n\n    if (relayChannel === 'nix') {\n      try {\n        var frame = document.getElementById(frameId);\n        var wrapper = window[NIX_GET_WRAPPER](frameId, token);\n        frame.contentWindow.opener = wrapper;\n      } catch (e) {\n        // Something went wrong. System will fallback to\n        // IFPC.\n        //alert('setupFrame Error!:'+e.message);\n\n      }\n    }\n\n    setup[frameId] = true;\n  }\n\n  /**\n   * Encodes arguments for the legacy IFPC wire format.\n   *\n   * @param {Object} args\n   * @return {String} the encoded args\n   */\n  function encodeLegacyData(args) {\n    var stringify = gadgets.json.stringify;\n    var argsEscaped = [];\n    for(var i = 0, j = args.length; i < j; ++i) {\n      argsEscaped.push(encodeURIComponent(stringify(args[i])));\n    }\n    return argsEscaped.join('&');\n  }\n\n  /**\n   * Helper function to process an RPC request\n   * @param {Object} rpc RPC request object\n   * @private\n   */\n    function process(rpc) {\n    //\n    // RPC object contents:\n    //   s: Service Name\n    //   f: From\n    //   c: The callback ID or 0 if none.\n    //   a: The arguments for this RPC call.\n    //   t: The authentication token.\n    //\n    if (rpc && typeof rpc.s === 'string' && typeof rpc.f === 'string' &&\n        rpc.a instanceof Array) {\n\n      //ensure id is compatible\n      rpc.f = getId(rpc.f);\n\n      // Validate auth token.\n      if (authToken[rpc.f]) {\n        // We allow type coercion here because all the url params are strings.\n        if (authToken[rpc.f] != rpc.t) {\n          throw new Error(\"Invalid auth token.\");\n        }\n      }\n\n      // If there is a callback for this service, attach a callback function\n      // to the rpc context object for asynchronous rpc services.\n      //\n      // Synchronous rpc request handlers should simply ignore it and return a\n      // value as usual.\n      // Asynchronous rpc request handlers, on the other hand, should pass its\n      // result to this callback function and not return a value on exit.\n      //\n      // For example, the following rpc handler passes the first parameter back\n      // to its rpc client with a one-second delay.\n      //\n      // function asyncRpcHandler(param) {\n      //   var me = this;\n      //   setTimeout(function() {\n      //     me.callback(param);\n      //   }, 1000);\n      // }\n      if (rpc.c) {\n        rpc.callback = function(result) {\n          gadgets.rpc.call(rpc.f, CALLBACK_NAME, null, rpc.c, result);\n        };\n      }\n\n      // Call the requested RPC service.\n      var result = (services[rpc.s] ||\n                    services[DEFAULT_NAME]).apply(rpc, rpc.a);\n\n      // If the rpc request handler returns a value, immediately pass it back\n      // to the callback. Otherwise, do nothing, assuming that the rpc handler\n      // will make an asynchronous call later.\n      if (rpc.c && typeof result != 'undefined') {\n        gadgets.rpc.call(rpc.f, CALLBACK_NAME, null, rpc.c, result);\n      }\n    }\n  }\n\n  /**\n   * Attempts to conduct an RPC call to the specified\n   * target with the specified data via the NIX\n   * method. If this method fails, the system attempts again\n   * using the known default of IFPC.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Name of the service to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   */\n  function callNix(targetId, serviceName, from, rpcData) {\n    try {\n//       alert('try nix targetId='+targetId);\n//       alert('try nix from='+from);\n      if (from != '..') {\n//        alert('try nix1');\n        // Call from gadget to the container.\n        var handler = nix_channels['..'];\n\n//        alert('Nix handler='+handler);\n        //alert('GetAuthToken'+(\"GetAuthToken\" in window.opener));\n//        alert('window.opener='+window.opener);\n\n        // If the gadget has yet to retrieve a reference to\n        // the NIX handler, try to do so now. We don't do a\n        // typeof(window.opener.GetAuthToken) check here\n        // because it means accessing that field on the COM object, which,\n        // being an internal function reference, is not allowed.\n        // \"in\" works because it merely checks for the prescence of\n        // the key, rather than actually accessing the object's property.\n        // This is just a sanity check, not a validity check.\n        if (!handler && window.opener && \"GetAuthToken\" in window.opener) {\n//          alert('try nix - handler');\n          handler = window.opener;\n\n          // Create the channel to the parent/container.\n          // First verify that it knows our auth token to ensure it's not\n          // an impostor.\n          if (handler.GetAuthToken() == authToken['..']) {\n            // Auth match - pass it back along with our wrapper to finish.\n            // own wrapper and our authentication token for co-verification.\n            var token = authToken['..'];\n            handler.CreateChannel(window[NIX_GET_WRAPPER]('..', token),\n                                  token);\n            // Set channel handler\n            nix_channels['..'] = handler;\n            window.opener = null;\n          }\n        }\n\n        // If we have a handler, call it.\n        if (handler) {\n          //alert('sent nix');\n          handler.SendMessage(rpcData);\n          return;\n        }\n\n//        alert('Nix did not send3');\n      } else {\n        // Call from container to a gadget[targetId].\n//        alert('try nix2 - nix_channels[targetId]='+nix_channels[targetId]);\n\n        // If we have a handler, call it.\n        if (nix_channels[targetId]) {\n//          alert('sent nix');\n          nix_channels[targetId].SendMessage(rpcData);\n          return;\n        }\n\n//        alert('Nix did not send1');\n      }\n\n//      alert('Nix did not send2');\n\n    } catch (e) {\n//      alert('Nix Failed!:'+e);\n    }\n\n//    alert('fallback ifpc');\n\n    // If we have reached this point, something has failed\n    // with the NIX method, so we default to using\n    // IFPC for this call.\n    callIfpc(targetId, serviceName, from, rpcData);\n  }\n\n  /**\n   * Attempts to conduct an RPC call to the specified\n   * target with the specified data via the FrameElement\n   * method. If this method fails, the system attempts again\n   * using the known default of IFPC.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Service name to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   * @param {Array.<Object>} callArgs Original arguments to call()\n   */\n  function callFrameElement(targetId, serviceName, from, rpcData, callArgs) {\n    //alert('callFrameElement!');\n    try {\n      if (from != '..') {\n        // Call from gadget to the container.\n        var fe = window.frameElement;\n\n        if (typeof fe[FE_G2C_CHANNEL] === 'function') {\n          // Complete the setup of the FE channel if need be.\n          if (typeof fe[FE_G2C_CHANNEL][FE_C2G_CHANNEL] !== 'function') {\n            fe[FE_G2C_CHANNEL][FE_C2G_CHANNEL] = function(args) {\n              process(gadgets.json.parse(args));\n            };\n          }\n\n          // Conduct the RPC call.\n          fe[FE_G2C_CHANNEL](rpcData);\n          return;\n        }\n      } else {\n        // Call from container to gadget[targetId].\n        var frame = document.getElementById(targetId);\n\n        if (typeof frame[FE_G2C_CHANNEL] === 'function' &&\n            typeof frame[FE_G2C_CHANNEL][FE_C2G_CHANNEL] === 'function') {\n\n          // Conduct the RPC call.\n          frame[FE_G2C_CHANNEL][FE_C2G_CHANNEL](rpcData);\n          return;\n        }\n      }\n    } catch (e) {\n    }\n\n    // If we have reached this point, something has failed\n    // with the FrameElement method, so we default to using\n    // IFPC for this call.\n    callIfpc(targetId, serviceName, from, rpcData, callArgs);\n  }\n\n  /**\n   * Conducts an RPC call to the specified\n   * target with the specified data via the IFPC\n   * method.\n   *\n   * @param {String} targetId Module Id of the RPC service provider.\n   * @param {String} serviceName Service name to call.\n   * @param {String} from Module Id of the calling provider.\n   * @param {Object} rpcData The RPC data for this call.\n   * @param {Array.<Object>} callArgs Original arguments to call()\n   */\n  function callIfpc(targetId, serviceName, from, rpcData, callArgs) {\n    //alert(\"CONTAINER IFPC params: \" + targetId + \" \" + serviceName + \" \" + from + \" \" + rpcData + \" \" + callArgs);\n    // Retrieve the relay file used by IFPC. Note that\n    // this must be set before the call, and so we conduct\n    // an extra check to ensure it is not blank.\n    var relay = gadgets.rpc.getRelayUrl(targetId);\n\n    if (!relay) {\n      throw new Error('No relay file assigned for IFPC');\n    }\n\n    // The RPC mechanism supports two formats for IFPC (legacy and current).\n    var src = null,\n        queueOut = [];\n    if (useLegacyProtocol[targetId]) {\n      // Format: #iframe_id&callId&num_packets&packet_num&block_of_data\n      src = [relay, '#', encodeLegacyData([from, callId, 1, 0,\n             encodeLegacyData([from, serviceName, '', '', from].concat(\n               callArgs))])].join('');\n      queueOut.push(src);\n    } else {\n\n      // Format: #targetId & sourceId@callId & packetNum & packetId & packetData\n      src = [relay, '#', encodeURIComponent(targetId), '&', from, '@', callId, '&'].join('');\n      if (!useMultiPartMessages[targetId]) {\n        // Format: #targetId & sourceId@callId & packetNum & packetId & packetData\n        queueOut.push([src, 1, '&', 0, '&', , encodeURIComponent(rpcData)].join(''));\n\n      }\n      else {\n        var message = encodeURIComponent(rpcData),\n            payloadLength = URL_LIMIT - src.length,\n            numPackets = Math.ceil(message.length / payloadLength),\n            packetIdx = 0,\n            part;\n        while (message.length > 0) {\n          part = message.substring(0, payloadLength);\n          message = message.substring(payloadLength);\n          queueOut.push([src, numPackets, '&', packetIdx, '&', part].join(''));\n          packetIdx += 1;\n        }\n\n      }\n\n    }\n\n    // Conduct the IFPC call by creating the Iframe with\n    // the relay URL and appended message.\n    do {\n      emitInvisibleIframe(queueOut.shift(),targetId);\n    } while (queueOut.length > 0);\n    return true;\n\n\n  }\n\n  //IE only: return true if a target iframe id is in a child popup window\n  function isInPopup(targetId) {\n    if (!targetId) {\n      return false;\n    }\n    if (targetId == \"..\") {\n      return false;\n    }\n    var frame = document.getElementById(targetId);\n    if (frame) {\n      return false;\n    }\n    if (typeof _childWindows === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n\n  //IE only: Queue of messages for child windows\n  window._childWindowMessageQueue = [];\n  //IE only: Unique increasing ID for all messages put on the child window queue\n  window._childWindowMessageId = 0;\n  //IE only: Allow a child window to retrieve a message from the queue\n  window._getChildWindowMessage = function(msgId) {\n    var q = _childWindowMessageQueue;\n    for(var ii=0; ii < q.length; ii++) {\n      var m = q[ii];\n      if (m.id == msgId) {\n        return m;\n      }\n    }\n  }\n\n  function isMessageComplete(arr, total) {\n    for (var i = total - 1; i >= 0; --i) {\n      if (typeof arr[i] === 'undefined') {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper function to emit an invisible IFrame.\n   * @param {String} src SRC attribute of the IFrame to emit.\n   * @private\n   */\n  function emitInvisibleIframe(src, targetId) {\n    if (isInPopup(targetId)) {\n        //IE only:\n        //Queue the message for our child iframes, which will poll for them.\n        //We do this because in IE a parent window does not have access to the\n        //document of child popup windows, and hence cannot emit an iframe\n        //within them\n        var id = window._childWindowMessageId;\n        id++;\n        window._childWindowMessageQueue.push({id:id, target:targetId, src:src});\n        window._childWindowMessageId++;\n        if(window._childWindowMessageQueue.length > 20) {\n          window._childWindowMessageQueue.shift();\n        }\n        return;\n    }\n    var iframe;\n    // Recycle IFrames\n    for (var i = iframePool.length - 1; i >=0; --i) {\n      var ifr = iframePool[i];\n      try {\n        if (ifr && (ifr.recyclable || ifr.readyState === 'complete')) {\n          ifr.parentNode.removeChild(ifr);\n          if (window.ActiveXObject) {\n            // For MSIE, delete any iframes that are no longer being used. MSIE\n            // cannot reuse the IFRAME because a navigational click sound will\n            // be triggered when we set the SRC attribute.\n            // Other browsers scan the pool for a free iframe to reuse.\n            iframePool[i] = ifr = null;\n            iframePool.splice(i, 1);\n          } else {\n            ifr.recyclable = false;\n            iframe = ifr;\n            break;\n          }\n        }\n      } catch (e) {\n        // Ignore; IE7 throws an exception when trying to read readyState and\n        // readyState isn't set.\n      }\n    }\n    // Create IFrame if necessary\n    if (!iframe) {\n      iframe = document.createElement('iframe');\n      iframe.style.border = iframe.style.width = iframe.style.height = '0px';\n      iframe.style.visibility = 'hidden';\n      iframe.style.position = 'absolute';\n      iframe.onload = function() { this.recyclable = true; };\n      iframePool.push(iframe);\n    }\n    iframe.src = src;\n    setTimeout(function() { document.body.appendChild(iframe); }, 0);\n  }\n\n    //Find a target IFrame or window based off an RPC ID, allowing for\n    //the fact that child popup windows with IFrames might exist.\n    function getTargetWin(id) {\n      if (typeof id === \"undefined\" || id === \"..\") {\n          // Chrome 30 throws SecurityError when accessing opener property on window.parent\n          try {\n            //Check to see if we are an iframe in a child window, and if so use the opener\n            if(sameDomain[id] !== false && window.parent.opener) {\n                return window.parent.opener.parent;\n            }\n          }\n          catch(e) {}\n          //Normal case, we are an IFrame in a page\n          return window.parent;\n      }\n\n      //At this point we are a container looking for a child iframe\n\n      // Cast to a String to avoid an index lookup.\n      id = String(id);\n\n      var target = null;\n\n      // Try window.frames first\n      //apparently in FF using window.frames will return a bogus window object if the\n      //iframe was removed and re-added to the document so it's always better to just do\n      //a dom lookup\n//      target = window.frames[id];\n//      if (target) {\n//          return target;\n//      }\n\n      // Fall back to getElementById()\n      target = document.getElementById(id);\n      if (target && target.contentWindow) {\n        return target.contentWindow;\n      }\n\n      // At this point we have missed on searching for child iframes\n      // in the main browser window, so search popup windows\n      // This assumes the container is keeping a list of child\n      // windows in the global _childWindows array\n      if (typeof _childWindows !== 'undefined') {\n          for(var ii=0; ii<_childWindows.length;ii++) {\n              var childWindow = _childWindows[ii];\n              try {\n                  //In IE 8, this will throw an exception.\n                  if (childWindow.document) {\n                      target = childWindow.document.getElementById(id);\n                  }\n              } catch(e) {\n                  //BUG. Don't know how to support\n                  //direct WMP calls from parent to child popups\n                  //in IE 8.\n              }\n              if (target && target.contentWindow) {\n                return target.contentWindow;\n              }\n          }\n      }\n      return null;\n    }\n\n\n  /**\n   * Attempts to make an rpc by calling the target's receive method directly.\n   * This works when gadgets are rendered on the same domain as their container,\n   * a potentially useful optimization for trusted content which keeps\n   * RPC behind a consistent interface.\n   * @param {String} target Module id of the rpc service provider\n   * @param {String} from Module id of the caller (this)\n   * @param {String} callbackId Id of the call\n   * @param {String} rpcData JSON-encoded RPC payload\n   * @return\n   */\n  function callSameDomain(target, rpc) {\n    var fn;\n\n    if (sameDomain[target] !== false) {\n      // Seed with a negative, typed value to avoid\n      // hitting this code path repeatedly\n      var targetEl = getTargetWin(target);\n\n      try {\n        // If this succeeds, then same-domain policy applied\n//        sameDomain[target] = targetEl.gadgets.rpc.receiveSameDomain;\n        fn = targetEl.gadgets.rpc.receiveSameDomain;\n      } catch (e) {\n        // Usual case: different domains\n      }\n    }\n\n    if (typeof fn === 'function') {\n      // Call target's receive method\n      fn(rpc);\n      sameDomain[target] = true;\n      return true;\n    }\n    else\n        sameDomain[target] = false;\n\n    return false;\n  }\n\n  // gadgets.config might not be available, such as when serving container js.\n  if (gadgets.config) {\n    /**\n     * Initializes RPC from the provided configuration.\n     */\n    function init(config) {\n\t  //alert(\"CONTAINER Config: \" + config);\n      // Allow for wild card parent relay files as long as it's from a\n      // white listed domain. This is enforced by the rendering servlet.\n      if (config.rpc.parentRelayUrl.substring(0, 7) === 'http://') {\n        relayUrl['..'] = config.rpc.parentRelayUrl;\n      } else {\n        // It's a relative path, and we must append to the parent.\n        // We're relying on the server validating the parent parameter in this\n        // case. Because of this, parent may only be passed in the query, not\n        // the fragment.\n        var params = document.location.search.substring(0).split(\"&\");\n\t\t//alert(\"Init Config method - Setting Params: \" + params);\n        var parentParam = \"\";\n        for (var i = 0, param; param = params[i]; ++i) {\n          // Only the first parent can be validated.\n          if (param.indexOf(\"parent=\") === 0) {\n            parentParam = decodeURIComponent(param.substring(7));\n            break;\n          }\n        }\n        relayUrl['..'] = parentParam + config.rpc.parentRelayUrl;\n      }\n      useLegacyProtocol['..'] = !!config.rpc.useLegacyProtocol;\n    }\n\n    var requiredConfig = {\n      parentRelayUrl : gadgets.config.NonEmptyStringValidator\n    };\n    gadgets.config.register(\"rpc\", requiredConfig, init);\n  }\n\n  return /** @scope gadgets.rpc */ {\n    /**\n     * Registers an RPC service.\n     * @param {String} serviceName Service name to register.\n     * @param {Function} handler Service handler.\n     *\n     * @member gadgets.rpc\n     */\n    register: function(serviceName, handler) {\n\t//alert(\"CONTAINER REGISTER VARIABLES: \" + serviceName + \" -|- \" + handler);\n      if (serviceName == CALLBACK_NAME) {\n        throw new Error(\"Cannot overwrite callback service\");\n      }\n\n      if (serviceName == DEFAULT_NAME) {\n        throw new Error(\"Cannot overwrite default service:\"\n                        + \" use registerDefault\");\n      }\n\t  services[serviceName] = handler;\n    },\n\n    /**\n     * Unregisters an RPC service.\n     * @param {String} serviceName Service name to unregister.\n     *\n     * @member gadgets.rpc\n     */\n    unregister: function(serviceName) {\n      if (serviceName == CALLBACK_NAME) {\n        throw new Error(\"Cannot delete callback service\");\n      }\n\n      if (serviceName == DEFAULT_NAME) {\n        throw new Error(\"Cannot delete default service:\"\n                        + \" use unregisterDefault\");\n      }\n\n      delete services[serviceName];\n    },\n\n    /**\n     * Registers a default service handler to processes all unknown\n     * RPC calls which raise an exception by default.\n     * @param {Function} handler Service handler.\n     *\n     * @member gadgets.rpc\n     */\n    registerDefault: function(handler) {\n      services[''] = handler;\n    },\n\n    /**\n     * Unregisters the default service handler. Future unknown RPC\n     * calls will fail silently.\n     *\n     * @member gadgets.rpc\n     */\n    unregisterDefault: function() {\n      delete services[''];\n    },\n\n    /**\n     * Calls an RPC service.\n     * @param {String} targetId Module Id of the RPC service provider.\n     *                          Empty if calling the parent container.\n     * @param {String} serviceName Service name to call.\n     * @param {Function|null} callback Callback function (if any) to process\n     *                                 the return value of the RPC request.\n     * @param {*} var_args Parameters for the RPC request.\n     *\n     * @member gadgets.rpc\n     */\n    call: function(targetId, serviceName, callback, var_args) {\n      ++callId;\n\t  targetId = getId(targetId) || '..';\n      if (callback) {\n        callbacks[callId] = callback;\n      }\n\n      // Default to the container calling.\n      var from = '..';\n\n      if (targetId === '..') {\n//        from = window.name;\n        from = getId(window.name);\n      }\n\n      // Not used by legacy, create it anyway...\n      var rpc = {\n        s: serviceName,\n        f: from,\n        c: callback ? callId : 0,\n        a: Array.prototype.slice.call(arguments, 3),\n        t: authToken[targetId]\n      };\n\n      // If target is on the same domain, call method directly\n      if (callSameDomain(targetId, rpc)) {\n        return;\n      }\n\n      var rpcData = gadgets.json.stringify(rpc);\n\n      var channelType = relayChannel;\n\n      // If we are told to use the legacy format, then we must\n      // default to IFPC.\n      if (useLegacyProtocol[targetId]) {\n        channelType = 'ifpc';\n      }\n\n      //alert('channelType:'+channelType);\n      switch (channelType) {\n        case 'dpm': // use document.postMessage.\n          // Get the window from the document. Fixes a bug with postMessage\n          // calls on a target that had been removed then appended to the document object\n            var targetWin = getTargetWin(targetId);\n            var targetDoc = targetWin.document;\n\n          if (targetDoc != null)\n            try {\n              targetDoc.postMessage(rpcData);\n            } catch (e) {\n              callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n            }\n          break;\n\n        case 'wpm': // use window.postMessage.\n          // Get the window from the document. Fixes a bug with postMessage\n          // calls on a target that had been removed then appended to the document object\n            var targetWin = getTargetWin(targetId);\n\n          if (targetWin != null) {\n            try {\n              targetWin.postMessage(rpcData, \"*\");//relayUrl[targetId]);\n            } catch (e) {\n              callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n            }\n          }\n          break;\n\n        case 'nix': // use NIX.\n          //alert('callNix!');\n          callNix(targetId, serviceName, from, rpcData);\n          break;\n\n        case 'fe': // use FrameElement.\n          callFrameElement(targetId, serviceName, from, rpcData, rpc.a);\n          break;\n\n        default: // use 'ifpc' as a fallback mechanism.\n          callIfpc(targetId, serviceName, from, rpcData, rpc.a);\n          break;\n      }\n    },\n\n    /**\n     * Gets the relay URL of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @return {String|undefined} Relay URL of the target frame.\n     *\n     * @member gadgets.rpc\n     */\n    getRelayUrl: function(targetId) {\n      return relayUrl[targetId];\n    },\n\n    /**\n     * Sets the relay URL of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @param {String} url Full relay URL of the target frame.\n     * @param {Boolean} opt_useLegacy True if this relay needs the legacy IFPC\n     *     wire format.\n     *\n     * @member gadgets.rpc\n     */\n    setRelayUrl: function(targetId, url, opt_useLegacy, useMultiPartMessagesForIFPC) {\n      relayUrl[targetId] = url;\n      useLegacyProtocol[targetId] = !!opt_useLegacy;\n      useMultiPartMessages[targetId] = !!useMultiPartMessagesForIFPC;\n    },\n\n    /**\n     * Sets the auth token of a target frame.\n     * @param {String} targetId Name of the target frame.\n     * @param {String} token The authentication token to use for all\n     *     calls to or from this target id.\n     *\n     * @member gadgets.rpc\n     */\n    setAuthToken: function(targetId, token) {\n      authToken[targetId] = token;\n      setupFrame(targetId, token);\n    },\n\n    /**\n     * Gets the RPC relay mechanism.\n     * @return {String} RPC relay mechanism. See above for\n     *   a list of supported types.\n     *\n     * @member gadgets.rpc\n     */\n    getRelayChannel: function() {\n      return relayChannel;\n    },\n\n    /**\n     * Receives and processes an RPC request. (Not to be used directly.)\n     * @param {Array.<String>} fragment An RPC request fragment encoded as\n     *        an array. The first 4 elements are target id, source id & call id,\n     *        total packet number, packet id. The last element stores the actual\n     *        JSON-encoded and URI escaped packet data.\n     *\n     * @member gadgets.rpc\n     */\n    receive: function(fragment) {\n      if (fragment.length > 4) {\n//        // TODO parse fragment[1..3] to merge multi-fragment messages\n//        process(gadgets.json.parse(\n//            decodeURIComponent(fragment[fragment.length - 1])));\n\n        var from = fragment[1],   // in the form of \"<from>@<callid>\"\n            numPackets = parseInt(fragment[2], 10),\n            packetIdx = parseInt(fragment[3], 10),\n            payload = fragment[fragment.length - 1],\n            completed = numPackets === 1;\n\n        // if message is multi-part, store parts in the proper order\n        if (numPackets > 1) {\n          if (!messagesIn[from]) {\n            messagesIn[from] = [];\n          }\n          messagesIn[from][packetIdx] = payload;\n          // check if all parts have been sent\n          if (isMessageComplete(messagesIn[from], numPackets)) {\n            payload = messagesIn[from].join('');\n            delete messagesIn[from];\n            completed = true;\n          }\n        }\n\n        // complete message sent\n        if (completed) {\n          process(gadgets.json.parse(decodeURIComponent(payload)));\n        }\n      }\n    },\n\n    /**\n     * Receives and processes an RPC request sent via the same domain.\n     * (Not to be used directly). Converts the inbound rpc object's\n     * Array into a local Array to pass the process() Array test.\n     * @param {Object} rpc RPC object containing all request params\n     */\n    receiveSameDomain: function(rpc) {\n      // Pass through to local process method but converting to a local Array\n      rpc.a = Array.prototype.slice.call(rpc.a);\n\t  window.setTimeout(function() { process(rpc) }, 0);\n    }\n  };\n}();\n","var gadgets = gadgets || {};\nif(gadgets.json){\n    gadgets.json.parse = function (text) {\n// Parsing happens in three stages. In the first stage, we run the text against\n// regular expressions that look for non-JSON patterns. We are especially\n// concerned with '()' and 'new' because they can cause invocation, and '='\n// because it can cause mutation. But just to be safe, we want to reject all\n// unexpected forms.\n\n// We split the first stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace all backslash pairs with '@' (a non-JSON character). Second, we\n// replace all simple value tokens with ']' characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or ']' or\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n        if(text && text.replace) {\n            if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/b-u]/g, '@').\n                    replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n                    replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n                return eval('(' + text + ')');\n            }\n        }\n        // If the text is not JSON parseable, then return false.\n\n        return false;\n    };\n}","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\n/**\n * A Factory function for the owf7 'components' rpc handlers.\n * @namespace ozpIwc.owf7BridgeModules\n * @method components\n * @param {Object} listener The listener to generate the functions for.\n * @returns {Object}\n */\nozpIwc.owf7BridgeModules.components = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'components': {\n            'keys': {\n                /**\n                 * @see reference/js/components/keys/KeyEventing.js\n                 * @param {ozpIwc.Owf7Participant} participant\n                 */\n                '_widget_iframe_ready': function (participant) {\n\n                }\n            },\n            'widget': {\n                /**\n                 *  Launcher API\n                 *  The handling of the rpc event is in WidgetLauncherContainer\n                 *  @see js/launcher/WidgetLauncherContainer.js:22, 36\n                 *  msg: {\n                 *    universalName: 'universal name of widget to launch',  //universalName or guid maybe identify the widget to be launched\n                 *    guid: 'guid of widget to launch',\n                 *    title: 'title to replace the widgets title' the title will only be changed if the widget is opened.\n                 *    titleRegex: optional regex used to replace the previous title with the new value of title\n                 *    launchOnlyIfClosed: true, //if true will only launch the widget if it is not already opened.\n                 *                              //if it is opened then the widget will be restored\n                 *    data: dataString  //initial launch config data to be passed to a widget only if the widget is opened.  this must be a string\n                 *  });\n                 *  The steps to launch a widget are defined in dashboard.launchWidgetInstance\n                 *  @see js/components/dashboard/Dashboard.js:427\n                 *  The \"iframe properties\" come from Dashboard.onBeforeWidgetLaunch\n                 *  @see js/components/dashboard/Dashboard.js:318\n                 *  @see js\\eventing\\Container.js:237 for getIframeProperties()\n                 * @see js\\components\\widget\\WidgetIframeComponent.js:15\n                 * @param {ozpIwc.Owf7Participant} participant\n                 * @param {String} sender\n                 * @param {String} msg\n                 */\n                '_WIDGET_LAUNCHER_CHANNEL': function (participant, sender, msg) {\n                    participant.components.onLaunchWidget(sender, msg, this);\n                }\n            }\n\n        }\n    };\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\n/**\n * A Factory function for the owf7 'drag and drop' rpc handlers.\n * @namespace ozpIwc.owf7BridgeModules\n * @method dd\n * @param {Object} listener The listener to generate the functions for.\n * @returns {Object}\n */\nozpIwc.owf7BridgeModules.dd = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'dd': {\n            /**\n             * _fake_mouse_move is needed for drag and drop.  The container code is at\n             * @see reference\\js\\dd\\WidgetDragAndDropContainer.js:52\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {Object} msg\n             */\n            '_fake_mouse_move': function (participant, msg) {\n                ozpIwc.log.info(msg);\n                participant.dd.onFakeMouseMoveFromClient(msg);\n            },\n            /**\n             * @see reference\\js\\dd\\WidgetDragAndDropContainer.js:52\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {Object} msg\n             */\n            '_fake_mouse_up': function (participant, msg) {\n                participant.dd.onFakeMouseUpFromClient(msg);\n            },\n            '_fake_mouse_out': function (participant) {\n                /*ignored*/\n            }\n        }\n    };\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\n/**\n * A Factory function for the owf7 'eventing' rpc handlers.\n * @namespace ozpIwc.owf7BridgeModules\n * @method eventing\n * @param {Object} listener The listener to generate the functions for.\n * @returns {Object}\n */\nozpIwc.owf7BridgeModules.eventing = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'eventing': {\n            /**\n             * Called by the widget to connect to the container\n             * @see js/eventing/Container.js:26 for the containerInit function that much of this is copied from\n             * @see js/eventing/Container.js:104 for the actual rpc.register\n             * @property container_init\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} sender\n             * @param {String} message\n             */\n            'container_init': function (participant, sender, message) {\n                participant.eventing.onContainerInit(sender, message);\n            },\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} command - publish | subscribe | unsubscribe\n             * @param {String} channel - the OWF7 channel\n             * @param {String} message - the message being published\n             * @param {String} dest - the ID of the recipient if this is point-to-point\n             * @see js/eventing/Container.js:376\n             * @see js-lib/shindig/pubsub.js\n             * @see js-lib/shindig/pubsub_router.js\n             */\n            'pubsub': function (participant, command, channel, message, dest) {\n                participant.eventing.onPubsub(command,channel,message,dest,this.f);\n            }\n        }\n    };\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\n/**\n * A Factory function for the owf7 'intents' rpc handlers.\n * @namespace ozpIwc.owf7BridgeModules\n * @method intents\n * @param {Object} listener The listener to generate the functions for.\n * @returns {Object}\n */\nozpIwc.owf7BridgeModules.intents = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'intents': {\n            /**\n             * used for both handling and invoking intents\n             * @see js/intents/WidgetIntentsContainer.js:32 for reference\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} senderId\n             * @param {Object} intent\n             * @param {OBject} data\n             * @param {String[]} destIds\n             */\n            '_intents': function(participant, senderId, intent, data, destIds){\n                participant.intents.onIntents(senderId,intent,data,destIds,this);\n            },\n            /**\n             * used by widgets to register an intent\n             * @see js/intents/WidgetIntentsContainer.js:85 for reference\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {Object} intent\n             * @param {String} destWidgetId\n             */\n            '_intents_receive': function(participant, intent, destWidgetId){\n                participant.intents.onIntentsReceive(intent,destWidgetId);\n            }\n        }\n    };\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\n/**\n * A Factory function for the owf7 'kernel' rpc handlers.\n * @namespace ozpIwc.owf7BridgeModules\n * @method kernel\n * @param {Object} listener The listener to generate the functions for.\n * @returns {Object}\n */\nozpIwc.owf7BridgeModules.kernel = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'kernel': {\n            /**\n             * @see js/kernel/kernel-rpc-base.js:147\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param widgetId\n             * @param srcWidgetId\n             * @returns {boolean}\n             */\n            '_getWidgetReady': function (participant, widgetId, srcWidgetId) {\n                participant.kernel.onGetWidgetReady(widgetId,this);\n            },\n            /**\n             * @see reference/js/kernel/kernel-rpc-base.js:130\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param widgetId\n             */\n            '_widgetReady': function(participant, widgetId){\n                participant.kernel.onWidgetReady(widgetId);\n            },\n            /**\n             * @see js/kernel/kernel-rpc-base.js:124\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} iframeId\n             * @param {String[]} functions\n             */\n            'register_functions': function (participant, iframeId, functions) {\n                participant.kernel.onRegisterFunctions(iframeId,functions);\n\n            },\n            /**\n             * @see js/kernel/kernel-rpc-base.js:88\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} widgetID\n             * @param {String} sourceWidgetId\n             * @returns {*}\n             */\n            'GET_FUNCTIONS': function (participant, widgetID, sourceWidgetId) {\n                participant.kernel.onGetFunctions(widgetID, sourceWidgetId,this);\n            },\n\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} widgetId\n             * @param {String} widgetIdCaller\n             * @param {String} functionName\n             * @param {Array} var_args\n             */\n            'FUNCTION_CALL': function(participant, widgetId, widgetIdCaller, functionName, var_args){\n                participant.kernel.onFunctionCall(widgetId, widgetIdCaller, functionName, var_args);\n            },\n\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} widgetId\n             * @param {String} widgetIdCaller\n             * @param {String} functionName\n             * @param {String} result\n             */\n            'FUNCTION_CALL_RESULT': function(participant, widgetId, widgetIdCaller, functionName, result){\n                participant.kernel.onFunctionCallResult(widgetId, widgetIdCaller, functionName, result);\n            },\n\n            /**\n             * @see js/kernel/kernel-container.js:204\n             * @param {ozpIwc.Owf7Participant} participant\n             * @returns {String[]}\n             */\n            'LIST_WIDGETS': function (participant) {\n                participant.kernel.onListWidgets(this);\n            },\n\n            /**\n             * @see js/\n             * @param {ozpIwc.Owf7Participant}participant\n             * @param {String} widgetId\n             * @param {*} dataToSend\n             */\n            'DIRECT_MESSAGE': function (participant, widgetId, dataToSend) {\n                participant.kernel.onDirectMessage(widgetId, dataToSend);\n            },\n\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} widgetId\n             * @param {String} eventName\n             */\n            'ADD_EVENT': function (participant, widgetId, eventName) {\n                participant.kernel.onAddEvent(widgetId, eventName);\n            },\n\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {String} eventName\n             * @param {*} payload\n             */\n            'CALL_EVENT': function (participant, eventName, payload) {\n                participant.kernel.onCallEvent(eventName, payload);\n            }\n        }\n    };\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7BridgeModules = ozpIwc.owf7BridgeModules  || {};\n\nozpIwc.owf7BridgeModules.util = function(listener){\n    if(!listener) { throw \"Needs to have an Owf7ParticipantListener\";}\n    return {\n        'util': {\n            /**\n             * @param {ozpIwc.Owf7Participant} participant\n             * @param {*} msg\n             */\n            'Ozone.log': function(participant,msg) {\n                participant.util.onOzoneLog(msg);\n            }\n        }\n    };\n};","/**\n * A bridging module for an IWC Participant Listener. Default use is for bridging an RPC handler interface to IWC\n * Participant handlers.\n *\n * @class Owf7Bridge\n * @namespace ozpIwc\n * @param {Object} config\n * @param {Object} config.listener The listener this is bridging for.\n * @param {Object} [funcs] Handlers to register upon instantiation of the bridge.\n * @param {Function} [config.defaultHandler=ozpIwc.Owf7Bridge._defaultHandler] The default handler for the bridge.\n * @constructor\n */\nozpIwc.Owf7Bridge=function(config) {\n    config = config || {};\n    if(!config.listener) {throw this._noListener_err;}\n\n    this.listener = config.listener;\n    this.funcs = {};\n\n    // Defaults to gadget.rpc calls, but can override if so desired.\n    this._defaultHandler = config.defaultHandler || this._defaultHandler;\n\n    // Initialize then add any additional registrations passed in the constructor.\n    this._initHandlers();\n    this.addHandlers(config.funcs);\n};\n\n/**\n * The error message passed when a desired participant does not exist in the listener.\n * @property getParticipant_err\n * @type {string}\n */\nozpIwc.Owf7Bridge.prototype._noListener_err = \"An Owf7ParticipantListener is required to bridge RPC to IWC\";\n\n//\n// Public Properties\n//\n\n/**\n * Adds handlers using their object property name as the channel. References stored in rpcFuncs.\n * Uncategorized functions will be placed in rpcFuncs under \"uncategorized\".\n * Adding a handler with a non-unique name will override the previous existence.\n * @method addHandlers\n * @param {Object} object\n */\nozpIwc.Owf7Bridge.prototype.addHandlers = function(object){\n    var formattedObj =  ozpIwc.Owf7Bridge.objectCategoryFormat(object);\n    this._registerFunctions(formattedObj);\n};\n\n/**\n * Removes handlers using their object property name as the channel.\n * Uncategorized functions to remove will be searched for in rpcFuncs under \"uncategorized\".\n * @method removeHandlers\n * @param {Object} object\n */\nozpIwc.Owf7Bridge.prototype.removeHandlers = function(object){\n    var formattedObj =  ozpIwc.Owf7Bridge.objectCategoryFormat(object);\n    this._unregisterFunctions(formattedObj);\n};\n\n/**\n * Replaces handlers registered using their object property name as the channel.\n * Uncategorized functions to update will be searched for in rpcFuncs under \"uncategorized\".\n * @method updateHandlers\n * @param {Object} oldObject\n * @param {Object} newObject\n */\nozpIwc.Owf7Bridge.prototype.updateHandlers = function(oldObject,newObject){\n    this.removeHandlers(oldObject);\n    this.addHandlers(newObject);\n};\n\n/**\n * Registers the default handler function for calls without a registered handler.\n * @method registerDefaultHandler\n * @param {Function} fn\n */\nozpIwc.Owf7Bridge.prototype.registerDefaultHandler = function(fn){\n    if(typeof fn !== \"function\"){\n        throw \"Owf7Bridge default handler must be a function.\";\n    }\n    gadgets.rpc.registerDefault(fn);\n};\n\n//\n// Private Properties\n//\n\n/**\n * Registers the object-indexed functions.\n * @method _registerFunctions\n * @param {Object} object\n * @private\n */\nozpIwc.Owf7Bridge.prototype._registerFunctions = function(object){\n    var self = this;\n    var onFunction = function(outObj,fn, name){\n\n        function func(){\n            //Ignore messages not meant for this participant.\n            var participant = self.listener.getParticipant(this.f);\n            if(participant){\n                // unshift to front of arguments\n                Array.prototype.unshift.call(arguments, participant);\n                fn.apply(this,arguments);\n            }\n        }\n\n        gadgets.rpc.register(name,func);\n        outObj[name] = func;\n    };\n\n    ozpIwc.Owf7Bridge.functionsInObjects({\n        'inObj': object,\n        'outObj': this.funcs,\n        'onFn':onFunction\n    });\n};\n\n\n/**\n * Unregisters the object-indexed functions.\n * @method _unregisterFunctions\n * @param {Object} object\n * @private\n */\nozpIwc.Owf7Bridge.prototype._unregisterFunctions = function(object){\n    var onFunction = function(outObj,fn, name){\n        gadgets.rpc.unregister(name,fn);\n        delete outObj[name];\n    };\n\n    ozpIwc.Owf7Bridge.functionsInObjects({\n        'inObj': object,\n        'outObj': this.funcs,\n        'onFn':onFunction\n    });\n};\n\n/**\n * Initializes the static handler registrations. Handler registrations gathered from ozpIwc.owf7BridgeModules.\n * Runtime determined handlers should be added with addHandlers.\n * @method _initHandlers\n * @returns {Object}\n * @private\n */\nozpIwc.Owf7Bridge.prototype._initHandlers = function(){\n    var self = this;\n    /**\n     * Default handler function to call if no registered function found.\n     * @method _defaultHandler\n     * @private\n     */\n    this._defaultHandler = function() {\n        //If this is from someone else using rpc we don't care.\n        if(self.listener.getParticipant(this.f)) {\n            var rpcString = function (rpc) {\n                return \"[service:\" + rpc.s + \",from:\" + rpc.f + \"]:\" + JSON.stringify(rpc.a);\n            };\n\n            ozpIwc.log.error(\"Unknown rpc \" + rpcString(this));\n        }\n    };\n\n    this.registerDefaultHandler(this._defaultHandler);\n\n    for(var i in ozpIwc.owf7BridgeModules){\n        var module = ozpIwc.owf7BridgeModules[i];\n        if(ozpIwc.owf7BridgeModules.hasOwnProperty(i) && typeof module === \"function\") {\n            this.addHandlers(module(this.listener));\n        }\n    }\n    return this.funcs;\n};\n\n//\n// Static utility methods\n//\n\n/**\n * Formats the given object for the Owf7Bridge function storage format.\n * @method objectCategoryFormat\n * @param {Object} object\n * @static\n * @returns {Object}\n */\nozpIwc.Owf7Bridge.objectCategoryFormat = function(object){\n    var obj = { 'uncategorized' : {} };\n\n    for (var i in object){\n        if(object.hasOwnProperty(i)){\n            if(typeof object[i] === 'function'){\n                obj.uncategorized[i] = object[i];\n            } else {\n                obj[i] = object[i];\n            }\n        }\n    }\n    return obj;\n};\n\n/**\n * A utility method to recursively walk through an object-indexed collection of functions.\n * @method functionsInObjects\n * @params {Object} config\n * @params {Object|Array} config.inObj A object of functions to walk\n * @params {Object} config.outObj A object of functions to walk\n * @params {Function} config.onFn  A registration function to pass (name,fn) to.\n * @static\n */\nozpIwc.Owf7Bridge.functionsInObjects = function(config){\n    config.inObj = config.inObj || {};\n    config.outObj = config.outObj || {};\n    config.onFn = config.onFn || function(){};\n\n    // Recursively cycle through the object/array.\n    // If property is a function pass it to fn.\n    // fnStorage creates a object-categorized reference to all functions added.\n    function recurseIfObject(inObj,outObj,onFn,onObj){\n        for(var i in inObj){\n            if(inObj.hasOwnProperty(i)){\n                if(typeof inObj[i] === 'function'){\n                    onFn(outObj,inObj[i],i);\n                } else if(typeof inObj[i] === 'object') {\n                    outObj[i] = outObj[i]|| {};\n                    recurseIfObject(inObj[i],outObj[i],onFn);\n                } else {\n                    console.error('typeof('+i+')=', typeof(inObj[i]), '. Only functions allowed.');\n                }\n            }\n        }\n    }\n    recurseIfObject(config.inObj,config.outObj,config.onFn);\n    return  config.outObj;\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * A Components module for the owf7Participant.\n * @namespace ozpIwc.owf7ParticipantModules\n * @class Components\n * @param {ozpIwc.Owf7Participant} participant\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Components = function(participant){\n    if(!participant) { throw \"Needs to have an Owf7Participant\";}\n\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n\n    /**\n     * A shorthand for system api access through the participant.\n     * @property systemApi\n     * @type {Object}\n     */\n    this.systemApi = this.participant.client.system();\n};\n\n/**\n * Handler for the RPC channel \"_WIDGET_LAUNCHER_CHANNEL\".\n * Launches legacy widgets using the IWC's system.api launch capabilities.\n * @method onLaunchWidget\n * @param {String} sender\n * @param {String} msg\n * @param {Object} rpc\n */\nozpIwc.owf7ParticipantModules.Components.prototype.onLaunchWidget=function(sender,msg,rpc) {\n    msg=JSON.parse(msg);\n    // ignore title, titleRegex, and launchOnlyIfClosed\n    this.systemApi.launch(\"/application/\" + msg.guid,{\n        contentType: \"text/plain\",\n        entity: msg.data\n    }).then(function(reply) {\n        //If the rpc call has a callback.\n        if(rpc.callback) {\n            rpc.callback({\n                error: false,\n                newWidgetLaunched: true,\n                uniqueId: \"unknown,not supported yet\"\n            });\n        }\n    });\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * A drag and drop module for the owf7Participant.\n * @class Dd\n * @namespace ozpIwc.owf7ParticipantModules\n * @param {ozpIwc.Owf7Participant} participant\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Dd = function(participant){\n    if(!participant) { throw \"Needs to have an Owf7Participant\";}\n\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n\n    /**\n     * A boolean flag used to track if a mouse event is over this participant's iFrame.\n     * @property mouseOver\n     * @type {Boolean}\n     */\n    this.mouseOver = true;\n\n    /**\n     * The last mouse position received from an event listener.\n     * @property lastPosition\n     * @type {Object}\n     */\n    this.lastPosition = {};\n\n    /**\n     * A timestamp of the last \"mousemove\" event\n     * @property lastMouseMove\n     * @type {Number}\n     */\n    this.lastMouseMove=Date.now();\n\n    /**\n     * The number of milliseconds to wait before sending another \"mousemove\" event.\n     * @property mouseMoveDelay\n     * @type {Number}\n     * @default 100\n     */\n    this.mouseMoveDelay=100;\n\n    /**\n     * A shorthand for data api access through the participant.\n     * @property dataApi\n     * @type {Object}\n     */\n    this.dataApi = this.participant.client.data();\n\n    this.registerDragAndDrop();\n};\n\n/**\n * Returns the IWC data.api resource path for the given rpc Channel\n * @method rpcChannel\n * @param {String} channel\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Dd.rpcChannel=function(channel) {\n    return \"/owf-legacy/gadgetsRpc/\"+channel;\n};\n\n/**\n * Uses the data.api watch capabilities to receive drag and drop events from other legacy widgets.\n * @method registerDragAndDrop\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.registerDragAndDrop=function() {\n    var self=this;\n    this.dataApi.watch(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_fake_mouse_up\"), function(packet) {\n        self.onFakeMouseUpFromOthers(packet.entity.newValue);\n    });\n    this.dataApi.watch(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_fake_mouse_move\"), function(packet) {\n        self.onFakeMouseMoveFromOthers(packet.entity.newValue);\n    });\n};\n\n/**\n * Receive a fake mouse event from another widget.  Do the conversions and\n * finagling that the container would have done in OWF 7.\n * @method onFakeMouseUpFromOthers\n * @param {MouseEvent} msg\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.onFakeMouseUpFromOthers=function(msg) {\n    var localizedEvent=this.convertToLocalCoordinates(msg);\n    if(this.inIframeBounds(localizedEvent)) {\n        //console.log(\"Received Fake mouse up at page(\"+localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\");\n        gadgets.rpc.call(this.participant.rpcId, '_fire_mouse_up', null,localizedEvent);\n    } else {\n        //console.log(\"out of page: Received Fake mouse up at page(\"\n        //            +localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\", \"InDrag?\" , this.participant.listener.inDrag);\n\n        //gadgets.rpc.call(this.participant.rpcId, '_dragStopInContainer', null,localizedEvent);\n        // this.eventingContainer.publish(this.dragStopInContainerName, null);\n        // TODO: not sure if the cancel goes here\n        //this.participant.client.send({\n        //    \"dst\": \"data.api\",\n        //    \"resource\": ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStopInContainer\"),\n        //    \"action\": \"set\",\n        //    \"entity\": msg  // ignored, but changes the value to trigger watches\n        //});\n    }\n};\n\n/**\n * Receive a fake mouse event from another widget.  Do the conversions and\n * finagling that the container would have done in OWF 7.\n * @method onFakeMouseMoveFromOthers\n * @param {MouseEvent} msg\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.onFakeMouseMoveFromOthers=function(msg) {\n    if(!(\"screenX\" in msg && \"screenY\" in msg)) {\n        return;\n    }\n\n    this.lastPosition=msg;\n    if(msg.sender===this.participant.rpcId) {\n        return;\n    }\n    var localizedEvent=this.convertToLocalCoordinates(msg);\n    //console.log(\"Received Fake mouse move at page(\"+localizedEvent.pageX+\",\"+localizedEvent.pageY+\")\");\n    if(this.inIframeBounds(localizedEvent)) {\n        this.mouseOver=true;\n        gadgets.rpc.call(this.participant.rpcId, '_fire_mouse_move', null,localizedEvent);\n    } else {\n        if(this.mouseOver) {\n            //console.log(\"Faking an mouse dragOut at page(\" + localizedEvent.pageX+\",\"+localizedEvent.pageY + \")\");\n            // this.eventingContainer.publish(this.dragOutName, null, lastEl.id);\n            // fake the pubsub event directly to the recipient\n            gadgets.rpc.call(this.participant.rpcId, 'pubsub', null, \"_dragOutName\", \"..\", null);\n        }\n        this.mouseOver=false;\n    }\n};\n\n/**\n * Receive a fake mouse event from the client.  Do the conversions and notify others on the bus of the movement.\n * @method onFakeMouseMoveFromClient\n * @param {MouseEvent} msg\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.onFakeMouseMoveFromClient=function(msg) {\n    // originally translated the pageX/pageY to container coordinates.  With\n    // the adapter, we're translating from screen coordinates so don't need to\n    // do any modification\n    //console.log(\"Fake mouse move:\",msg);\n\n    this.lastPosition = msg;\n    var now=Date.now();\n    var deltaT=now-this.lastMouseMove;\n    if(deltaT < this.mouseMoveDelay) {\n        return;\n    }\n    var localizedEvent=this.convertToLocalCoordinates(msg);\n    this.mouseOver = this.inIframeBounds(localizedEvent);\n\n    //console.log(\"Sending mouse move\", this.mouseOver, msg);\n    this.lastMouseMove=now;\n    this.dataApi.set(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_fake_mouse_move\"),{\n        entity: msg,\n        lifespan: \"ephemeral\"\n\n    });\n};\n\n/**\n * Only sent if the client is a flash widget (dunno why?).  Otherwise, it sends a _dragStopInWidgetName\n * @method onFakeMouseUpFromClient\n * @param {MouseEvent} msg\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.onFakeMouseUpFromClient=function(msg) {\n    // originally translated the pageX/pageY to container coordinates.  With\n    // the adapter, we're translating from screen coordinates so don't need to\n    // do any modification\n    //console.log(\"sending rpc msg to client: _fake_mouse_up\");\n    this.dataApi.set(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_fake_mouse_up\"),{\n        entity: msg,\n        lifespan: \"ephemeral\"\n    });\n};\n\n/**\n * Returns true if the location is within the widget's iframe bounds.\n * @method inIframeBounds\n * @param {MouseEvent} location\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.inIframeBounds=function(location) {\n    // since we normalized the coordinates, we can just check to see if they are\n    // within the dimensions of the iframe.\n    return location.pageX >= 0 && location.pageX < this.participant.iframe.clientWidth &&\n        location.pageY >= 0 && location.pageY < this.participant.iframe.clientHeight;\n};\n\n/**\n * Normalize the drag and drop message coordinates for the widget's content.\n * @method convertToLocalCoordinates\n * @param {Object} msg A drag and drop message.\n * @returns {Object}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.convertToLocalCoordinates=function(msg) {\n    // translate to container coordinates\n    var rv=this.participant.listener.convertToLocalCoordinates(msg);\n\n    // this calculates the position of the iframe relative to the document,\n    // accounting for scrolling, padding, etc.  If we started at zero, this\n    // would be the iframe's coordinates inside the document.  Instead, we started\n    // at the mouse location relative to the adapter, which gives the location\n    // of the event inside the iframe content.\n    // http://www.kirupa.com/html5/get_element_position_using_javascript.htm\n\n    // should work in most browsers: http://www.quirksmode.org/dom/w3c_cssom.html#elementview\n    // IE < 7: will miscalculate by skipping ancestors that are \"position:relative\"\n    // IE, Opera: not work if there's a \"position:fixed\" in the ancestors\n    var element=this.participant.iframe;\n    while(element) {\n        rv.pageX += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n        rv.pageY += (element.offsetTop - element.scrollTop + element.clientTop);\n        element = element.offsetParent;\n    }\n\n    return rv;\n};\n\n//==========================\n// Hook the pubsub channels for drag and drop\n//==========================\n\n// No action needed, just let the move as normal for these:\n// _dragStart: publish, receive\n// _dragOverWidget:  publish, receive (not used by client)\n\n\n/**\n * Cancels the publish, since these should originate from the container, not widgets\n * @method hookPublish_dragOutName\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookPublish_dragOutName=function() {return false;};\n\n/**\n * Cancels the publish, since these should originate from the container, not widgets\n * @method hookPublish_dropReceiveData\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookPublish_dropReceiveData=function() { return false; };\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dragSendData\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dragSendData=function() { return false;};\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dragOutName\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dragOutName=function() { return false;};\n\n/**\n * Cancels the receive, since these should not originate from outside the adapter\n * @method hookReceive_dropReceiveData\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dropReceiveData=function() { return false; };\n\n\n/**\n * Starts the drag state.\n * @method hookReceive_dragStart\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dragStart=function(message) {\n    //console.log(\"Starting external drag on \",message);\n    this.participant.listener.inDrag=true;\n    return true;\n};\n\n/**\n * Starts the drag state.\n * @method hookPublish_dragStart\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookPublish_dragStart=function(message) {\n    //console.log(\"Starting internal drag on \",message);\n    this.participant.listener.inDrag=true;\n    return true;\n};\n\n/**\n * Stops the drag state.\n * @method hookReceive_dragStopInContainer\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dragStopInContainer=function(msg) {\n    //console.log(\"Stopping drag in container\",msg);\n    this.participant.listener.inDrag=false;\n    return true;\n};\n\n/**\n * Stops the drag state.\n * @method hookReceive_dragStopInWidget\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookReceive_dragStopInWidget=function() {\n    //console.log(\"Stopping drag in widget\");\n    this.participant.listener.inDrag=false;\n    return true;\n};\n\n/**\n * Stores the drag data in the data.api.\n * @method hookPublish_dragSendData\n * @param {Object} message\n * @returns {Boolean}\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookPublish_dragSendData=function(message) {\n    //console.log(\"Setting drag data to \",message);\n    this.dataApi.set(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_dragSendData_value\"),{\n            \"entity\":message,\n            \"lifespan\": \"ephemeral\"\n        });\n    return false;\n};\n\n/**\n * Handles drag data if the drag stopped over top of this participant.\n * @method hookPublish_dragStopInWidget\n * @param {Object} message\n * @returns {Boolean} true if stopped in this widget, false if not.\n */\nozpIwc.owf7ParticipantModules.Dd.prototype.hookPublish_dragStopInWidget=function(message) {\n    // this always published from the widget that initiated the drag\n    // so we need to figure out who to send it to\n\n    // make sure the mouse is actually over the widget so that it can't steal\n    // the drag from someone else\n    //console.log(\"hookPublish_dragStopInWidget\",message);\n    var self = this;\n    if(!this.mouseOver) {\n        //console.log(\"dragStopInWidget, but not over myself.  Faking mouse event\",this.lastPosition);\n        this.onFakeMouseUpFromClient(this.lastPosition);\n\n        //wait 1/4 second, see if someone canceled/handled the drag if not cancel it\n        window.setTimeout(function(){\n            if(self.participant.listener.inDrag){\n                self.dataApi.set(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStopInContainer\"),{\n                    \"entity\": Date.now(),  // ignored, but changes the value to trigger watches\n                    \"lifespan\": \"ephemeral\"\n                });\n            }\n        },250);\n\n        return false;\n    }\n    // this widget claims the drag, give it the drag data\n    this.dataApi.get(ozpIwc.owf7ParticipantModules.Dd.rpcChannel(\"_dragSendData_value\")).then(function(packet) {\n        gadgets.rpc.call(self.participant.rpcId, 'pubsub', null, \"_dropReceiveData\", \"..\", packet.entity);\n        // tell everyone else that the container took over the drag\n        // also handles the case where the we couldn't get the dragData for some reason by\n        // canceling the whole drag operation\n        // is this duplicative of the same event in _fake_mouse_up?\n\n        self.dataApi.set(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStopInContainer\"),{\n            \"entity\": Date.now() , // ignored, but changes the value to trigger watches\n            \"lifespan\": \"ephemeral\"\n        });\n    });\n\n    return true;\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * An Eventing module for the owf7Participant. Retains knowledge of pubsub subscriptions.\n * @namespace ozpIwc.owf7ParticipantModules\n * @class Eventing\n * @param {ozpIwc.Owf7Participant} participant\n * @param {ozpIwc.owf7ParticipantModules.Dd} participant.dd\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Eventing = function(participant){\n    if(!participant) { throw \"Needs to have an OWF7Participant\";}\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n    this.participant.dd = this.participant.dd || {};\n\n    /**\n     * A shorthand for data api access through the participant.\n     * @property dataApi\n     * @type {Object}\n     */\n    this.dataApi = this.participant.client.data();\n\n    /**\n     * A store of done functions for api callbacks grouped by channel.\n     * @property subscriptions\n     * @type {Object}\n     */\n    this.subscriptions = {};\n};\n\n/**\n * Returns the IWC data.api resource path for the given pubsub channel.\n * @method pubsubChannel\n * @param {String} channel\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Eventing.pubsubChannel=function(channel) {\n    return \"/owf-legacy/eventing/\"+channel;\n};\n\n/**\n * Handles owf7 RPC messages on channel \"container_init\".\n * @method onContainerInit\n * @param {String} sender\n * @param {String} message\n */\nozpIwc.owf7ParticipantModules.Eventing.prototype.onContainerInit=function(sender,message) {\n    // The container sends params, but the widget JS ignores them\n    if ((window.name === \"undefined\") || (window.name === \"\")) {\n        window.name = \"ContainerWindowName\" + Math.random();\n    }\n    var initMessage = gadgets.json.parse(message);\n    var useMultiPartMessagesForIFPC = initMessage.useMultiPartMessagesForIFPC;\n    var idString = this.participant.rpcId;\n\n    gadgets.rpc.setRelayUrl(idString, initMessage.relayUrl, false, useMultiPartMessagesForIFPC);\n    gadgets.rpc.setAuthToken(idString, 0);\n    var jsonString = '{\\\"id\\\":\\\"' + window.name + '\\\"}';\n    gadgets.rpc.call(idString, 'after_container_init', null, window.name, jsonString);\n};\n\n/**\n * Handles owf7 RPC messages on channel \"pubsub\".\n * @method onPubsub\n * @param {String} command\n * @param {String} channel\n * @param {String} message\n * @param {String} dest\n */\nozpIwc.owf7ParticipantModules.Eventing.prototype.onPubsub = function(command,channel,message,dest,sender){\n    switch (command) {\n        case 'publish':\n            this.onPublish(command, channel, message, dest, sender);\n            break;\n        case 'subscribe':\n            this.onSubscribe(command, channel, message, dest);\n            break;\n        case 'unsubscribe':\n            this.onUnsubscribe(command, channel, message, dest);\n            break;\n    }\n};\n\n/**\n * Handles owf7 pubsub publish commands.\n * @method onPublish\n * @param {String} command\n * @param {String} channel\n * @param {String} message\n * @param {String} dest\n */\nozpIwc.owf7ParticipantModules.Eventing.prototype.onPublish=function(command, channel, message, dest, sender) {\n    if(this.participant.dd[\"hookPublish\"+channel] && !this.participant.dd[\"hookPublish\"+channel].call(this.participant.dd,message)) {\n        return;\n    }\n    this.dataApi.set(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(channel),{\n        \"entity\": {\n            \"message\": message,\n            \"sender\": sender\n        },\n        \"lifespan\": \"ephemeral\"\n    });\n};\n\n/**\n * Handles owf7 pubsub subscribe commands.\n * @method onSubscribe\n * @param {String} command\n * @param {String} channel\n * @param {String} message\n * @param {String} dest\n */\nozpIwc.owf7ParticipantModules.Eventing.prototype.onSubscribe=function(command, channel, message, dest) {\n    this.subscriptions[channel]=this.subscriptions[channel] || {};\n\n    var self = this;\n\n    this.dataApi.watch(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(channel),{\"lifespan\": \"ephemeral\"},\n        function(packet,done) {\n            //Add the msgId to a list of handlers to unregister should unsubscribe be fired.\n            self.subscriptions[channel] = self.subscriptions[channel] || {};\n            self.subscriptions[channel][packet.replyTo] = done;\n            if(self.participant.dd[\"hookReceive\"+channel] &&\n                !self.participant.dd[\"hookReceive\"+channel].call(self.participant.dd,packet.entity.newValue)) {\n                return;\n            }\n\n            // from shindig/pubsub_router.js:77\n            //gadgets.rpc.call(subscriber, 'pubsub', null, channel, sender, message);\n            gadgets.rpc.call(self.participant.rpcId, 'pubsub', null, channel, packet.entity.newValue.sender,\n                packet.entity.newValue.message);\n        });\n};\n\n/**\n * Handles owf7 pubsub unsubscribe commands.\n * @method onUnsubscribe\n * @param {String} command\n * @param {String} channel\n * @param {String} message\n * @param {String} dest\n */\nozpIwc.owf7ParticipantModules.Eventing.prototype.onUnsubscribe=function(command, channel, message, dest) {\n    this.subscriptions[channel] = this.subscriptions[channel] || [];\n    //itterate over all the done flags and cancel the callbacks.\n    for(var i in this.subscriptions[channel]) {\n        this.subscriptions[channel][i]();\n    }\n};\n","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * An Intents module for the owf7Participant.\n * @namespace ozpIwc.owf7ParticipantModules\n * @class Intents\n * @param {ozpIwc.Owf7Participant} participant\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Intents = function(participant){\n    if(!participant) { throw \"Needs to have an Owf7Participant\";}\n\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n\n    /**\n     * A shorthand for intents api access through the participant.\n     * @property dataApi\n     * @type {Object}\n     */\n    this.intentsApi = this.participant.client.intents();\n};\n\n\n/**\n * Called when the owf7 widget invokes an intent.\n * @method onIntents\n * @param {String} senderId\n * @param {Object} intent\n * @param {Object} data\n * @param {String[]} destIds\n * @param {Object} rpc\n */\nozpIwc.owf7ParticipantModules.Intents.prototype.onIntents=function(senderId,intent,data,destIds,rpc){\n    intent = intent || {};\n    if(!intent.dataType) { throw \"A legacy intent registration requires a dataType.\";}\n    if(!intent.action) { throw \"A legacy intent registration requires an action.\";}\n\n    this.intentsApi.invoke('/' + intent.dataType + '/' + intent.action, {\n        'entity': {\n            entity: data,\n            destIds: destIds,\n            senderId: senderId\n        }\n    });\n};\n\n/**\n * Called when the owf7 widget registers a handler for an intent.\n * @method onIntentsReceive\n * @param {Object} intent\n * @param {String} destWidgetId\n */\nozpIwc.owf7ParticipantModules.Intents.prototype.onIntentsReceive=function(intent,destWidgetId) {\n    intent = intent || {};\n    if(!intent.dataType) { throw \"A legacy intent registration requires a dataType.\";}\n    if(!intent.action) { throw \"A legacy intent registration requires an action.\";}\n\n    this.intentsApi.register('/' + intent.dataType + '/' + intent.action, {\n        'entity': {\n            'type': intent.dataType,\n            'action': intent.action,\n            'icon': this.participant.appData.icons.small || \"about:blank\",\n            'label': this.participant.widgetParams.name || document.title\n        },\n        'contentType': 'application/vnd.ozp-iwc-intent-handler-v1+json'\n    }, function (response) {\n        var ifie = response.entity || {};\n        var intent = response.intent || {};\n        var entity = ifie.entity;\n        var intentObj = {\n            'action': intent.action,\n            'dataType': intent.type\n        };\n\n        gadgets.rpc.call(destWidgetId, \"_intents\", null, ifie.senderId, intentObj, entity);\n    });\n};","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * A Kernel module for the owf7Participant.\n * @class Kernel\n * @namespace ozpIwc.owf7ParticipantModules\n * @param {ozpIwc.Owf7Participant} participant\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Kernel = function(participant){\n    if(!participant) { throw \"Needs to have an Owf7Participant\";}\n\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n\n    /**\n     * @property widgetReadyMap\n     * @type {Object}\n     */\n    this.widgetReadyMap = {};\n\n    /**\n     * @property proxyMap\n     * @type {Object}\n     */\n    this.proxyMap = {};\n\n    /**\n     * A shorthand for data api access through the participant.\n     * @property dataApi\n     * @type {Object}\n     */\n    this.dataApi = this.participant.client.data();\n\n    this.registerWidgetListing();\n    this.registerFunctionCallListener();\n    this.registerFunctionCallResultListener();\n    this.registerWidgetReadyListener();\n    this.registerDirectMessageListener();\n};\n\n/**\n * IWC data.api resource path where all active legacy widget GUIDs are reported.\n * @property listWidgetChannel\n * @type {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.listWidgetChannel = \"/owf-legacy/kernel/_list_widgets\";\n\n/**\n * IWC data.api resource path prefix for any proxy related messaging\n * @property listWidgetChannel\n * @type {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.widgetProxyChannelPrefix = \"/owf-legacy/kernel/proxy/\";\n\n/**\n * Returns the IWC Data.api resource path for the given widget's _widgetReady event.\n * @method widgetReadyResource\n * @param {String} widgetId\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.widgetReadyResource = function(widgetId){\n    return this.widgetProxyChannelPrefix + widgetId + \"/_widgetReady\";\n};\n\n/**\n * Returns the IWC Data.api resource path for the given widget's FUNCTION_CALL_CLIENT event.\n * @method functionCallResource\n * @param {String} widgetId\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.functionCallResource = function(widgetId){\n    return this.widgetProxyChannelPrefix + widgetId + \"/FUNCTION_CALL_CLIENT\";\n};\n\n/**\n * Returns the IWC Data.api resource path for the given widget's FUNCTION_CALL_RESULT_CLIENT event.\n * @method functionCallResultResource\n * @param {String} widgetId\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.functionCallResultResource = function(widgetId){\n    return this.widgetProxyChannelPrefix + widgetId + \"/FUNCTION_CALL_RESULT_CLIENT\";\n};\n\n/**\n * Returns the IWC Data.api resource path for the given widget's DIRECT_MESSAGE event.\n * @method directMessageResource\n * @param {String} widgetId\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.directMessageResource = function(widgetId){\n    return this.widgetProxyChannelPrefix + widgetId + \"/DIRECT_MESSAGE\";\n};\n/**\n * Returns the IWC Data.api resource path for the given widget's CALL_EVENT event.\n * @method directMessageResource\n * @param {String} eventName\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.callEventResource = function(eventName) {\n    return this.widgetProxyChannelPrefix + \"/CALL_EVENT/\" + eventName;\n};\n\n/**\n * Register's a listener for the given widget's _widgetReady event.\n * @method functionCallResultResource\n * @param {String} widgetId\n * @returns {String}\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.registerWidgetReadyListener = function(){\n    var self = this;\n    this.dataApi.set(this.widgetReadyResource(this.participant.instanceId),{'lifespan': \"ephemeral\"});\n\n    this.dataApi.watch(this.widgetReadyResource(this.participant.instanceId),function(packet,done) {\n        done();\n        self.onWidgetReady(self.participant.instanceId);\n    });\n};\n\n/**\n * Updates the IWC's data.api resource specified by listWidgetChannel with this widget's GUID.\n * Registers a beforeunload event to remove the GUID on closing.\n *\n * @method registerWidgetListing\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.registerWidgetListing = function() {\n    var self = this;\n\n    window.addEventListener(\"beforeunload\",function(){\n        self.unregisterWidgetListing();\n    });\n\n    this.dataApi.addChild(this.listWidgetChannel,{\n        entity: gadgets.json.parse(this.participant.rpcId),\n        lifespan: \"ephemeral\"\n    }).then(function(reply){\n        self.widgetListing = reply.entity.resource;\n    });\n};\n\n/**\n * Updates the IWC's data.api resource specified by listWidgetChannel by removing this widget's GUID.\n * @method unregisterWidgetListing\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.unregisterWidgetListing = function() {\n    this.dataApi.removeChild(this.listWidgetChannel,{\n        entity: {resource: this.widgetListing}\n    });\n    return true;\n};\n\n/**\n * A handler for the _getWidgetReady event.\n * @method onGetWidgetReady\n * @param {String} widgetId\n * @param {Object} rpc\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onGetWidgetReady = function(widgetId,rpc){\n    if(this.widgetReadyMap.hasOwnProperty(widgetId)) {\n        rpc.callback(this.widgetReadyMap[widgetId] === true);\n    } else {\n        var self = this;\n        this.dataApi.get(this.widgetReadyResource(widgetId)).then(function(packet){\n            var ready = !!packet.entity;\n            if(ready) {\n                self.onWidgetReady(widgetId);\n            }\n            rpc.callback(ready);\n        },function(error){\n            if(error.response === \"noResource\"){\n                rpc.callback(false);\n            }\n        });\n    }\n};\n\n/**\n * A handler for the _widgetReady event.\n * @method onWidgetReady\n * @param {String} widgetId\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onWidgetReady = function(widgetId){\n    this.widgetReadyMap[widgetId] = true;\n    this.dataApi.set(this.widgetReadyResource(widgetId),{\n        entity: this.widgetReadyMap[widgetId],\n        lifespan: \"ephemeral\"\n    });\n\n    //loop through any widgets that have reference to widgetId and send messages that widgetId widget is ready\n    var proxyHolders = this.proxyMap[widgetId];\n    if (proxyHolders) {\n        for (var i = 0, len = proxyHolders.length; i < len; i++) {\n            var proxyHolder = proxyHolders[i];\n            if (proxyHolder) {\n                this.dataApi.set(this.widgetReadyResource(proxyHolder),{\n                    entity: true,\n                    lifespan: \"ephemeral\"\n                });\n            }\n        }\n    }\n};\n\n/**\n * A handler for the register_functions event.\n * @method onRegisterFunctions\n * @param {String} iframeId\n * @param {String[]} functions\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onRegisterFunctions = function(iframeId, functions){\n    var widgetID = JSON.parse(iframeId).id;\n    var self = this;\n\n\n    this.dataApi.get(this.widgetProxyChannelPrefix + widgetID).then(function(reply){\n        return Array.isArray(reply.entity) ? reply.entity : [];\n    },function(error){\n        if(error.response === \"noResource\"){\n            return [];\n        }\n    }).then(function(functionArray){\n        for(var j in functions){\n            if(functionArray.indexOf(functions[j]) < 0){\n                functionArray.push(functions[j]);\n            }\n        }\n        self.dataApi.set(self.widgetProxyChannelPrefix + widgetID,{\n            entity: functionArray,\n            lifespan: \"ephemeral\"\n        });\n    });\n};\n\n/**\n * A handler for the GET_FUNCTIONS event.\n * @method onGetFunctions\n * @param {String} widgetId\n * @param {String} sourceWidgetId\n * @param {Object} rpc\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onGetFunctions = function(widgetId, sourceWidgetId, rpc){\n    var self = this;\n    this.dataApi.get(this.widgetProxyChannelPrefix + widgetId).then(function(reply){\n\n        //save the fact that the sourceWidgetId has a proxy of the widgetId\n        if (!self.proxyMap[widgetId]) {\n            self.proxyMap[widgetId] = [];\n        }\n        if (sourceWidgetId) {\n            var id = JSON.parse(sourceWidgetId).id;\n            self.proxyMap[widgetId].push(id);\n        }\n\n        rpc.callback(reply.entity);\n    },function(error){\n        if(error.response === \"noResource\"){\n            rpc.callback([]);\n        }\n    });\n};\n\n/**\n * A handler for the FUNCTION_CALL event. Fires when the widget wants to make a function call.\n * @method onGetFunctions\n * @param {String} widgetId\n * @param {String} widgetIdCaller\n * @param {String} functionName\n * @param {Array} var_args\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onFunctionCall = function(widgetId, widgetIdCaller, functionName, var_args){\n    this.dataApi.set(this.functionCallResource(widgetId),{\n        entity: {\n            'widgetId': widgetId,\n            'widgetIdCaller': widgetIdCaller,\n            'functionName': functionName,\n            'var_arg': var_args,\n            'time': Date.now()  // slap a timestamp on to trigger change always\n        },\n        lifespan: \"ephemeral\"\n    });\n};\n\n/**\n * When receiving a function call from another widget, this calls rpc FUNCTION_CALL_CLIENT to route it to this legacy widget.\n * @method functionCallClient\n * @param {String} widgetId\n * @param {String} widgetIdCaller\n * @param {String} functionName\n * @param {Array} var_args\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.functionCallClient = function(widgetId, widgetIdCaller, functionName, var_args){\n    gadgets.rpc.call(this.participant.rpcId, 'FUNCTION_CALL_CLIENT', null, widgetId, widgetIdCaller, functionName, var_args);\n};\n\n/**\n*  When receiving a function call result from another widget, this calls rpc  FUNCTION_CALL_CLIENT to route it to this legacy widget.\n* @method functionCallResultClient\n* @param {String} widgetId\n* @param {String} widgetIdCaller\n* @param {String} functionName\n* @param {String} result\n*/\nozpIwc.owf7ParticipantModules.Kernel.prototype.functionCallResultClient = function(widgetId, widgetIdCaller, functionName, result){\n    gadgets.rpc.call(this.participant.rpcId, 'FUNCTION_CALL_RESULT_CLIENT', null, widgetId, functionName, result);\n};\n\n/**\n * A handler for the FUNCTION_CALL_RESULT event. Fires when the widget is sending a result to a different client.\n * @method onGetFunctions\n * @param {String} widgetId\n * @param {String} widgetIdCaller\n * @param {String} functionName\n * @param {Object} result\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onFunctionCallResult = function(widgetId, widgetIdCaller, functionName, result){\n    this.dataApi.set(this.functionCallResultResource(widgetIdCaller),{\n        entity: {\n            'widgetId': widgetId, //NOTE swapping\n            'widgetIdCaller': widgetIdCaller,\n            'functionName': functionName,\n            'result': result,\n            'time': Date.now()// slap a timestamp on to trigger change always\n        },\n        lifespan: \"ephemeral\"\n    });\n};\n\n/**\n* Watches for other legacy widgets to try and make a function call.\n* @method registerFunctionCallHandler\n*/\nozpIwc.owf7ParticipantModules.Kernel.prototype.registerFunctionCallListener = function(){\n    var self = this;\n    this.dataApi.watch(this.functionCallResource(this.participant.instanceId),function(packet) {\n        var widgetId = packet.entity.newValue.widgetId || \"\";\n        var widgetIdCaller = packet.entity.newValue.widgetIdCaller || \"\";\n        var functionName = packet.entity.newValue.functionName || \"\";\n        var var_arg = packet.entity.newValue.var_arg || [];\n\n        self.functionCallClient(widgetId,widgetIdCaller,functionName,var_arg);\n    });\n};\n\n/**\n* Watches for other legacy widgets to return a function call result.\n* @method registerFunctionCallHandler\n*/\nozpIwc.owf7ParticipantModules.Kernel.prototype.registerFunctionCallResultListener = function(){\n    var self = this;\n    this.dataApi.watch(this.functionCallResultResource(this.participant.instanceId), function(packet) {\n        var widgetId = packet.entity.newValue.widgetId || \"\";\n        var widgetIdCaller = packet.entity.newValue.widgetIdCaller || \"\";\n        var functionName = packet.entity.newValue.functionName || \"\";\n        var result = packet.entity.newValue.result || {};\n\n        self.functionCallResultClient(widgetId,widgetIdCaller,functionName,result);\n    });\n};\n\n/**\n * Gathers a list of current active legacy widget GUIDs from the IWC data.api.\n * @method onListWidgets\n * @param {Object} rpc\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onListWidgets = function(rpc){\n    var self = this;\n    this.dataApi.list(this.listWidgetChannel).then(function(reply){\n        var widgets = [];\n        var widgetCount = reply.entity.length || 0;\n        var handleWidgetData = function(resp){\n            if(resp.entity && resp.entity.id) {\n                widgets.push(resp.entity);\n            }\n            if (--widgetCount <= 0) {\n                rpc.callback(widgets);\n            }\n        };\n\n        for(var i in reply.entity){\n            self.dataApi.get(reply.entity[i]).then(handleWidgetData);\n        }\n    });\n};\n\n/**\n * Forwards RPC call DIRECT_MESSAGE on IWC Bus.\n * @method onDirectMessage\n * @param {String} widgetId\n * @param {Object} dataToSend\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onDirectMessage = function(widgetId, dataToSend){\n    this.dataApi.set(this.directMessageResource(widgetId),{\n        entity:{\n            message: dataToSend,\n            ts: ozpIwc.util.now()\n        },\n        lifespan: \"ephemeral\"\n    });\n};\n\n/**\n * Watches for other legacy widgets to send a DIRECT_MESSAGE through the iwc.\n * @method registerDirectMessageListener\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.registerDirectMessageListener = function(){\n    var self = this;\n    this.dataApi.watch(this.directMessageResource(this.participant.instanceId), function(packet) {\n        if(packet.entity && packet.entity.newValue && packet.entity.newValue.message) {\n            var payload = packet.entity.newValue.message;\n            self.directMessageClient(payload);\n        }\n    });\n};\n\n/**\n *  When receiving a direct message from another widget, this calls DIRECT_MESSAGE to route it to this legacy widget.\n * @method directMessageClient\n * @param {*} payload\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.directMessageClient = function(payload){\n    gadgets.rpc.call(this.participant.rpcId, 'DIRECT_MESSAGEL_CLIENT', null, payload);\n};\n\n/**\n *  When receiving a add event call from the widget, this registers to pass any events onto the widget for the eventName.\n * @method onAddEvent\n * @param {String} widgetId\n * @param {String} eventName\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onAddEvent = function(widgetId, eventName){\n    var self = this;\n    this.dataApi.watch(this.callEventResource(eventName), function(packet) {\n        if(packet.entity && packet.entity.newValue && packet.entity.newValue.message) {\n            self.eventClient(eventName,packet.entity.newValue.message);\n        }\n    });\n};\n\n/**\n * When receiving a event call  from another widget, this calls rpc EVENT_CLIENT to route it to this legacy widget.\n * @method eventCall\n * @param {String} eventName\n * @param {*} payload\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.eventClient = function(eventName,payload){\n    gadgets.rpc.call(this.participant.rpcId, \"EVENT_CLIENT\", null, eventName, payload);\n};\n\n/**\n * Forwards RPC call CLIENT_EVENT on IWC Bus.\n * @method onCallEvent\n * @param {String} eventName\n * @param {*} payload\n */\nozpIwc.owf7ParticipantModules.Kernel.prototype.onCallEvent = function(eventName, payload){\n    this.dataApi.set(this.callEventResource(eventName), {\n        entity:{\n            'message': payload,\n            'ts': ozpIwc.util.now()\n        },\n        lifespan: \"ephemeral\"\n    });\n};\n","ozpIwc = ozpIwc || {};\nozpIwc.owf7ParticipantModules = ozpIwc.owf7ParticipantModules || {};\n\n/**\n * An Util module for the owf7Participant.\n * @namespace ozpIwc.owf7ParticipantModules\n * @class Components\n * @param {ozpIwc.Owf7Participant} participant\n * @constructor\n */\nozpIwc.owf7ParticipantModules.Util = function(participant){\n    if(!participant) { throw \"Needs to have an Owf7Participant\";}\n\n    /**\n     * @property participant\n     * @type {ozpIwc.Owf7Participant}\n     */\n    this.participant = participant;\n\n    /**\n     * A shorthand for data api access through the participant.\n     * @property systemApi\n     * @type {Object}\n     */\n    this.dataApi = this.participant.client.data();\n\n    this.registerLogging();\n};\n\n/**\n * Watch registrations for Ozone.log data.\n * @method registerUtils\n */\nozpIwc.owf7ParticipantModules.Util.prototype.registerLogging = function(){\n    this.dataApi.watch(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"Ozone.log\"),function(response){\n        var msg = response.entity.newValue.message;\n        gadgets.rpc.call('..',\"Ozone.log\",null,msg);\n        ozpIwc.log.debug(\"[Legacy]\",msg);\n    });\n};\n\n/**\n * Handler for the RPC channel \"Ozone.log\".\n * Passes the log message on to other legacy widgets\n * @method onOzoneLog\n * @param {*} msg\n */\nozpIwc.owf7ParticipantModules.Util.prototype.onOzoneLog=function(msg) {\n    this.dataApi.set(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"Ozone.log\"), {\n        entity: {\n            message: msg,\n            ts: ozpIwc.util.now() // to make every packet trigger \"changed\"\n        },\n        lifespan: \"ephemeral\"\n    });\n};","/**\n * @class Owf7Participant\n * @constructor\n * @namespace ozpIwc\n * @param {Object} config\n * @param {Object} config.iframe The iframe that contains the widget for this participant\n * @param {Object} config.listener The parent OWF7ParticipantListener\n * @param {Object} config.client The InternalParticipant for this widget.\n * @param {String} config.guid The GUID for the widget that this is an instance of.\n * @param {String} config.instanceId The GUID for the widget instance.\n * @param {String} config.url The launch URL for this widget.\n * @param {String} config.rpcId The iframe.id that is used as the ID for RPC.\n * @param {String} [config.launchDataResource=undefined] The intents.api resource that contains the launch data for the widget, or null for no launch data.\n * @param {Boolean} [config.externalInit=false] Set to true if the iframe has been initialized elsewhere, such as when embedded in OWF 7.\n */\nozpIwc.Owf7Participant=function(config) {\n    config = config || {};\n    if(!config.listener) { throw \"Needs to have an OWF7ParticipantListener\";}\n    if(!config.client) {throw \"Needs an IWC Client\";}\n    if(!config.guid) { throw \"Must be assigned a guid for this widget\";}\n    if(!config.instanceId) { throw \"Needs an widget instance id\";}\n    if(!config.url) { throw \"Needs a url for the widget\"; }\n    if(!config.rpcId) { throw \"Needs a rpcId for the widget\"; }\n\n    /**\n     * The iframe element of this participant.\n     * @property iframe\n     * @type {Object}\n     */\n    this.iframe=config.iframe;\n\n    /**\n     * The listener this participant is connected to.\n     * @property listener\n     * @type {ozpIwc.Owf7ParticipantListener}\n     */\n    this.listener=config.listener;\n\n    /**\n     * The client participant this uses to communicate on the bus.\n     * @property client\n     * @type {ozpIwc.ClientParticipant}\n     */\n    this.client=config.client;\n\n    /**\n     * A shorthand for system api access.\n     * @property systemApi\n     * @type {Function}\n     */\n    this.systemApi = this.client.system();\n\n    /**\n     * A shorthand for intents api access\n     * @property intentsApi\n     * @type {Function}\n     */\n    this.intentsApi = this.client.intents();\n\n    /**\n     * The url of the owf7 widget\n     * @property url\n     * @type {String}\n     */\n    this.url=config.url;\n\n    /**\n     * @property instanceId\n     * @type {String}\n     */\n    this.instanceId=config.instanceId;\n\n    /**\n     * @property widgetGuid\n     * @type {String}\n     */\n    this.widgetGuid=config.guid;\n\n    /**\n     * @property rpcId\n     * @type {String}\n     */\n    this.rpcId=config.rpcId;\n\n    /**\n     * A callback for when this participant is initialized.\n     * @property onReady\n     * @type {Fimctopm}\n     */\n    this.onReady = config.onReady;\n\n    /**\n     * @todo  Do a lookup on this at some point\n     * @property widgetQuery\n     * @type {string}\n     */\n    this.widgetQuery=\"?lang=en_US&owf=true&themeName=a_default&themeContrast=standard&themeFontSize=12\";\n\n    /**\n     * @property launchData\n     * @type {Object}\n     */\n    this.launchData= config.launchData;\n    /**\n     * @property appData\n     * @type {Object}\n     */\n    this.appData={};\n\n    // Create an iframe for the widget\n    this.iframe = document.createElement('iframe');\n    this.iframe.id = config.instanceId;\n\n    this._initModules();\n\n    if(!config.externalInit) {\n        this.connect(config.launchData);\n    }\n};\n\n/**\n * Initializes the modules used by this participant\n * @method initModules\n * @private\n */\nozpIwc.Owf7Participant.prototype._initModules = function(){\n    /**\n     * Drag and Drop module of the participant.\n     * @property dd\n     * @type {ozpIwc.owf7ParticipantModules.Dd}\n     */\n    this.dd = new ozpIwc.owf7ParticipantModules.Dd(this);\n\n    /**\n     * Eventing module of the participant.\n     * @property eventing\n     * @type {ozpIwc.owf7ParticipantModules.Eventing}\n     */\n    this.eventing = new ozpIwc.owf7ParticipantModules.Eventing(this);\n\n    /**\n     * Kernel module of the participant.\n     * @property kernel\n     * @type {ozpIwc.owf7ParticipantModules.Kernel}\n     */\n    this.kernel = new ozpIwc.owf7ParticipantModules.Kernel(this);\n\n    /**\n     * Components module of the participant.\n     * @property components\n     * @type {ozpIwc.owf7ParticipantModules.Components}\n     */\n    this.components = new ozpIwc.owf7ParticipantModules.Components(this);\n\n    /**\n     * Intents module of the participant.\n     * @property intents\n     * @type {ozpIwc.owf7ParticipantModules.Intents}\n     */\n    this.intents = new ozpIwc.owf7ParticipantModules.Intents(this);\n\n    /**\n     * Util module of the participant.\n     * @property util\n     * @type {ozpIwc.owf7ParticipantModules.Intents}\n     */\n    this.util = new ozpIwc.owf7ParticipantModules.Util(this);\n};\n\n/**\n * Creates the iframe for the legacy widget content. Registers drag and drop for the widget.\n * @method initIframe\n * @private\n */\nozpIwc.Owf7Participant.prototype.connect=function() {\n    if(!this.connectPromise) {\n        var self = this;\n        var openWidget = function(appData){\n            self.appData = appData || {};\n            self.setWidgetTitle(self.appData.name);\n            self.iframe.setAttribute(\"name\", JSON.stringify(self.widgetParams));\n            self.iframe.setAttribute(\"src\", self.widgetParams.url + self.widgetQuery);\n            self.iframe.setAttribute(\"id\", self.rpcId);\n            var iframe = document.body.appendChild(self.iframe);\n\n            var ddCalibrate = function(){\n                // cancel out the pointerEvents= none after first calculation.\n                iframe.style.pointerEvents = \"auto\";\n                iframe.removeEventListener(\"mousemove\",ddCalibrate);\n            };\n\n            document.addEventListener(\"mousemove\",ddCalibrate);\n            if (typeof self.onReady === \"function\") {\n                self.onReady();\n            }\n        };\n        /**\n         * @property connectPromise\n         * @Type Promise\n         */\n        this.connectPromise = new Promise(function(resolve,reject) {\n            // these get turned into the iframes name attribute\n            // Refer to js/eventing/container.js:272\n            self.widgetParams = {\n                \"id\": self.instanceId,\n                \"webContextPath\": \"/owf\",\n                \"preferenceLocation\": self.listener.prefsUrl,\n                \"relayUrl\": self.listener.rpcRelay,\n                \"url\": self.url,\n                \"guid\": self.widgetGuid,\n                // fixed values\n                \"layout\": \"desktop\",\n                \"containerVersion\": \"7.0.1-GA\",\n                \"owf\": true,\n                \"lang\": \"en_US\",\n                \"runningInOZP\": true,\n                \"currentTheme\": {\n                    \"themeName\": \"a_default\",\n                    \"themeContrast\": \"standard\",\n                    \"themeFontSize\": 12\n                },\n                \"version\": 1,\n                \"locked\": false,\n                \"data\": self.launchData\n            };\n            resolve(self._getApplicationData());\n        }).then(function (appData) {\n            openWidget(appData);\n        });\n    }\n\n    return this.connectPromise;\n};\n\n/**\n * Gathers information from the system.api for the participants widgetGuid. If no information exists on the system.api,\n * an empty object is passed to the callback function\n * @method _getApplicationData\n * @returns {Promise}\n * @private\n */\nozpIwc.Owf7Participant.prototype._getApplicationData = function(){\n    var fallbackData = {\n        icons: {\n            small: \"about:blank\",\n            large: \"about:blank\",\n            banner: \"about:blank\",\n            featuredBanner: \"about:blank\"\n        },\n        intents: [],\n        name: null\n    };\n    return this.systemApi.get(\"/application/\" + this.widgetGuid).then(function(reply){\n        if(reply.entity && reply.entity.icons){\n            return reply.entity;\n        } else {\n            return fallbackData;\n        }\n    }).catch(function(eror){\n        return fallbackData;\n    });\n};\n\n/**\n * Sets the document title to the given name. If no name given, the title is\n * set with the following pattern \"<href.host><href.pathname> -- OWF Widget\".\n * @method setWidgetTitle\n * @param {String} name.\n */\nozpIwc.Owf7Participant.prototype.setWidgetTitle = function(name){\n    if(!name){\n        var a=document.createElement(\"a\");\n        a.href = this.widgetParams.url;\n        name = a.host + a.pathname + \" -- OWF Widget\";\n    }\n    document.title = name;\n    return document.title;\n};","(function() {\n\n    var absolutePath = function(href) {\n        var link = document.createElement(\"a\");\n        link.href = href;\n        return (link.protocol+\"//\"+link.host+link.pathname+link.search+link.hash);\n    };\n\n    /**\n     *\n     * @class Owf7ParticipantListener\n     * @namespace ozpIwc\n     * @param {Object} config\n     * @param {String} config.rpcRelay\n     * @param {String} config.prefsUrl\n     * @param {Number} config.xOffset\n     * @param {Number} config.yOffset\n     * @constructor\n     */\n    ozpIwc.Owf7ParticipantListener=function(config) {\n        config = config || {};\n\n        /**\n         * @property rpcRelay\n         * @type {String}\n         */\n        this.rpcRelay=absolutePath(config.rpcRelay || \"rpc_relay.uncompressed.html\");\n\n        /**\n         * @property prefsUrl\n         * @type {String}\n         */\n        this.prefsUrl=absolutePath(config.prefsUrl || ozpIwc.owf7PrefsUrl || \"/owf/prefs\");\n\n        /**\n         * @property participants\n         * @type Object\n         * @default {}\n         */\n        this.participants={};\n\n        /**\n         * @property client\n         * @type {ozpIwc.ClientParticipant}\n         */\n        this.client=new ozpIwc.ClientParticipant();\n        this.client.connect();\n\n        /**\n         * A shorthand for data api access\n         * @property dataApi\n         * @type {Object}\n         */\n        this.dataApi = this.client.data();\n\n        /**\n         * @property bridge\n         * @type {ozpIwc.Owf7Bridge}\n         */\n        this.bridge = config.bridge || new ozpIwc.Owf7Bridge({listener: this});\n\n\n        if ((window.name === \"undefined\") || (window.name === \"\")) {\n            window.name = \"ContainerWindowName\" + Math.random();\n        }\n        this.installDragAndDrop();\n\n        // try to find our position on screen to help with cross-window drag and drop\n        // +26 on height for 10px container margin total + 16px on scrollbar\n        // @TODO the container/iframe overflow:hidden, this needs to be changed to overflow:auto and use its scrollbar rather than the iframes document. State Api related.\n\n        /**\n         * @property xOffset\n         * @type {Number}\n         */\n        this.xOffset= (typeof config.xOffset === \"number\") ?\n            config.xOffset : window.screenX+window.outerWidth - window.innerWidth + 10;\n\n        /**\n         * @property yOffset\n         * @type {Number}\n         */\n        this.yOffset= (typeof config.yOffset === \"number\") ?\n            config.yOffset : window.screenY+window.outerHeight - window.innerHeight + 26;\n    };\n\n    /**\n     * Generates a guid the way OWF7 does it.\n     * @method makeGuid\n     * @returns {string}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.makeGuid=function() {\n        /*jshint bitwise: false*/\n        // not a real guid, but it's the way OWF 7 does it\n        var S4=function(){\n            return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n        };\n        return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n    };\n\n    /**\n     * Updates the xOffset & yOffset from the given MouseEvent object.\n     * @method updateMouseCoordinates\n     * @param {MouseEvent} e\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.updateMouseCoordinates=function(e) {\n        //console.log(\"Updating coords from(\"+this.xOffset+\",\"+this.yOffset+\")\");\n        this.xOffset=e.screenX-e.clientX;\n        this.yOffset=e.screenY-e.clientY;\n        //console.log(\"     to (\"+this.xOffset+\",\"+this.yOffset+\")\");\n    };\n\n    /**\n     * Normalize the drag and drop message coordinates for the listener's content.\n     * @method convertToLocalCoordinates\n     * @param {Object} msg\n     * @param {Object} element\n     * @returns {Object}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.convertToLocalCoordinates=function(msg,element) {\n        // copy the message\n        var rv={};\n        for(var k in msg) {\n            rv[k]=msg[k];\n        }\n\n        // start with the location relative to the adapter's top-left\n        rv.pageX=msg.screenX-this.xOffset;\n        rv.pageY=msg.screenY-this.yOffset;\n\n        // this calculates the position of the iframe relative to the document,\n        // accounting for scrolling, padding, etc.  If we started at zero, this\n        // would be the iframe's coordinates inside the document.  Instead, we started\n        // at the mouse location relative to the adapter, which gives the location\n        // of the event inside the iframe content.\n        // http://www.kirupa.com/html5/get_element_position_using_javascript.htm\n\n        // should work in most browsers: http://www.quirksmode.org/dom/w3c_cssom.html#elementview\n        // IE < 7: will miscalculate by skipping ancestors that are \"position:relative\"\n        // IE, Opera: not work if there's a \"position:fixed\" in the ancestors\n        while(element) {\n            rv.pageX += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            rv.pageY += (element.offsetTop - element.scrollTop + element.clientTop);\n            element = element.offsetParent;\n        }\n\n        return rv;\n    };\n\n    /**\n     * Creates a Owf7Participant for the given widget and registers its widget state channel.\n     * @method addWidget\n     * @param {Object} config\n     * @param {String} [config.instanceId] a id is assigned if not given.\n     * @param {String} [config.guid] the guid of the widget.\n     * @param {String} config.url the url of the widget.\n     * @param {String} [config.launchDataResource] a resource path of data to be used for the launch of the widget.\n     * @returns {*}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.addWidget=function(config) {\n        config = config || {};\n        var self = this;\n        var participantConfig = {};\n\n        for(var i in config){\n            participantConfig[i] = config[i];\n        }\n\n        participantConfig.instanceId = config.instanceId || this.makeGuid();\n        participantConfig.listener = self;\n        participantConfig.client = this.client;\n        participantConfig.rpcId = gadgets.json.stringify({id:participantConfig.instanceId});\n\n\n        // Update the hash in case the user refreshes. Then create the participant/register RPC\n        function init(cfg) {\n            var hashObj = {},\n                newHash = \"#\";\n\n            if(cfg.guid){\n                hashObj.guid = cfg.guid;\n            }\n            if(cfg.instanceId){\n                hashObj.instanceId= cfg.instanceId;\n            }\n\n            // Serialize the hash and add it to the location.\n            for (var i in hashObj) {\n                newHash += i + \"=\" + hashObj[i] + \"&\";\n            }\n            newHash = newHash.substring(0, newHash.length - 1);\n            window.location.hash = newHash;\n\n            // After storing the hash, if the guid does not exist just set it as instanceId for OWF7 to not complain.\n            cfg.guid = cfg.guid || cfg.instanceId;\n           self.participants[cfg.instanceId] = new ozpIwc.Owf7Participant(cfg);\n\n            // Add the _WIDGET_STATE_CHANNEL_<instanceId> RPC registration for the widget.\n            // @see js\\state\\WidgetStateContainer.js:35\n            var widgetRegistrations = {'state': {}};\n            widgetRegistrations.state['_WIDGET_STATE_CHANNEL_' + cfg.instanceId] = function(){};\n            self.bridge.addHandlers(widgetRegistrations);\n\n            // Ensure the participant has connected before we resolve.\n            return cfg.listener.participants[cfg.instanceId].connect().then(function(){\n                return cfg.listener.participants[cfg.instanceId];\n            });\n\n\n            // If there was a IWC launch resource, go gather it\n        }\n\n        if (config.launchData) {\n            participantConfig.guid = config.launchData.id;\n        }\n        return init(participantConfig);\n    };\n\n    /**\n     * Notifies the IWC that a legacy widget has canceled dragging.\n     * @method cancelDrag\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.cancelDrag=function() {\n        this.inDrag=false;\n        this.dataApi.set(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStopInContainer\"),{\n            \"entity\": Date.now(),  // ignored, but changes the value to trigger watches\n            lifespan: \"ephemeral\"\n        });\n    };\n\n    /**\n     * Adds the capability of drag and drop to the container.\n     * @method installDragAndDrop\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.installDragAndDrop=function() {\n        var self=this;\n\n        /**\n         * @property inDrag\n         * @type {Boolean}\n         */\n        this.inDrag = false;\n        var updateMouse=function(evt) {self.updateMouseCoordinates(evt);};\n\n        document.addEventListener(\"mouseenter\",updateMouse);\n        document.addEventListener(\"mouseout\",updateMouse);\n\n        this.dataApi.watch(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStart\"), function(reply) {\n            self.inDrag=true;\n        });\n        this.dataApi.watch(ozpIwc.owf7ParticipantModules.Eventing.pubsubChannel(\"_dragStopInContainer\"),\n            function(reply) {\n                self.inDrag=false;\n            });\n        document.addEventListener(\"mousemove\",function(e) {\n            /*jshint bitwise: false*/\n            self.updateMouseCoordinates(e);\n            //console.log(\"Adapter mousemove at \",e);\n            if(self.inDrag && (e.button !== 0)) {\n                ozpIwc.log.info(\"Canceling drag\");\n                self.cancelDrag();\n            }\n        },false);\n    };\n\n    /**\n     * Returns the participant if it registered to the listener, throws an exception if it does not.\n     * @method getParticipant\n     * @param id\n     * @returns {Object}\n     */\n    ozpIwc.Owf7ParticipantListener.prototype.getParticipant = function(id){\n        //If this is from someone else using rpc we don't care.\n        var formattedId;\n        try {\n            formattedId = JSON.parse(id).id;\n        } catch (e){\n            formattedId = id; // If its malformed it was likely malformed to begin with.\n        }\n        return this.participants[formattedId];\n    };\n})();"]}